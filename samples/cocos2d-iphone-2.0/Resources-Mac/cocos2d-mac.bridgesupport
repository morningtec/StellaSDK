<?xml version='1.0'?>
<signatures version='1.0'>
<struct name='CCPVRMipmap' type='{CCPVRMipmap=&quot;address&quot;*&quot;len&quot;I}'>
<field name='address' declared_type='unsigned char*' type='*'/>
<field name='len' declared_type='unsigned int' type='I'/>
</struct>
<struct name='CCZHeader' type='{CCZHeader=&quot;sig&quot;[4C]&quot;compression_type&quot;S&quot;version&quot;S&quot;reserved&quot;I&quot;len&quot;I}'>
<field name='sig' declared_type='uint8_t*' type='[4C]'/>
<field name='compression_type' declared_type='uint16_t' type='S'/>
<field name='version' declared_type='uint16_t' type='S'/>
<field name='reserved' declared_type='uint32_t' type='I'/>
<field name='len' declared_type='uint32_t' type='I'/>
</struct>
<struct name='UT_hash_bucket' type='{UT_hash_bucket=&quot;hh_head&quot;^{UT_hash_handle}&quot;count&quot;I&quot;expand_mult&quot;I}'>
<field name='hh_head' declared_type='struct UT_hash_handle*' type='^{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}'/>
<field name='count' declared_type='unsigned int' type='I'/>
<field name='expand_mult' declared_type='unsigned int' type='I'/>
</struct>
<struct name='UT_hash_handle' type='{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}'>
<field name='tbl' declared_type='struct UT_hash_table*' type64='^{UT_hash_table=^{UT_hash_bucket}III^{UT_hash_handle}qIIIII}' type='^{UT_hash_table=^{UT_hash_bucket}III^{UT_hash_handle}iIIIII}'/>
<field name='prev' declared_type='void*' type='^v'/>
<field name='next' declared_type='void*' type='^v'/>
<field name='hh_prev' declared_type='struct UT_hash_handle*' type='^{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}'/>
<field name='hh_next' declared_type='struct UT_hash_handle*' type='^{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}'/>
<field name='key' declared_type='void*' type='^v'/>
<field name='keylen' declared_type='unsigned int' type='I'/>
<field name='hashv' declared_type='unsigned int' type='I'/>
</struct>
<struct name='UT_hash_table' type64='{UT_hash_table=&quot;buckets&quot;^{UT_hash_bucket}&quot;num_buckets&quot;I&quot;log2_num_buckets&quot;I&quot;num_items&quot;I&quot;tail&quot;^{UT_hash_handle}&quot;hho&quot;q&quot;ideal_chain_maxlen&quot;I&quot;nonideal_items&quot;I&quot;ineff_expands&quot;I&quot;noexpand&quot;I&quot;signature&quot;I}' type='{UT_hash_table=&quot;buckets&quot;^{UT_hash_bucket}&quot;num_buckets&quot;I&quot;log2_num_buckets&quot;I&quot;num_items&quot;I&quot;tail&quot;^{UT_hash_handle}&quot;hho&quot;i&quot;ideal_chain_maxlen&quot;I&quot;nonideal_items&quot;I&quot;ineff_expands&quot;I&quot;noexpand&quot;I&quot;signature&quot;I}'>
<field name='buckets' declared_type='UT_hash_bucket*' type='^{UT_hash_bucket=^{UT_hash_handle}II}'/>
<field name='num_buckets' declared_type='unsigned int' type='I'/>
<field name='log2_num_buckets' declared_type='unsigned int' type='I'/>
<field name='num_items' declared_type='unsigned int' type='I'/>
<field name='tail' declared_type='struct UT_hash_handle*' type='^{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}'/>
<field name='hho' declared_type='ptrdiff_t' type64='q' type='i'/>
<field name='ideal_chain_maxlen' declared_type='unsigned int' type='I'/>
<field name='nonideal_items' declared_type='unsigned int' type='I'/>
<field name='ineff_expands' declared_type='unsigned int' type='I'/>
<field name='noexpand' declared_type='unsigned int' type='I'/>
<field name='signature' declared_type='uint32_t' type='I'/>
</struct>
<struct name='ccArray' type64='{ccArray=&quot;num&quot;Q&quot;max&quot;Q&quot;arr&quot;^@}' type='{ccArray=&quot;num&quot;I&quot;max&quot;I&quot;arr&quot;^@}'>
<field name='num' declared_type='NSUInteger' type64='Q' type='I'/>
<field name='max' declared_type='NSUInteger' type64='Q' type='I'/>
<field name='arr' declared_type='CCARRAY_ID*' type='^@'/>
</struct>
<struct name='ccBMFontDef' type64='{_BMFontDef=&quot;charID&quot;S&quot;rect&quot;{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;size&quot;{CGSize=&quot;width&quot;d&quot;height&quot;d}}&quot;xOffset&quot;s&quot;yOffset&quot;s&quot;xAdvance&quot;s}' type='{_BMFontDef=&quot;charID&quot;S&quot;rect&quot;{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;size&quot;{CGSize=&quot;width&quot;f&quot;height&quot;f}}&quot;xOffset&quot;s&quot;yOffset&quot;s&quot;xAdvance&quot;s}'>
<field name='charID' declared_type='unichar' type='S'/>
<field name='rect' declared_type='CGRect' type64='{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;size&quot;{CGSize=&quot;width&quot;d&quot;height&quot;d}}' type='{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;size&quot;{CGSize=&quot;width&quot;f&quot;height&quot;f}}'/>
<field name='xOffset' declared_type='short' type='s'/>
<field name='yOffset' declared_type='short' type='s'/>
<field name='xAdvance' declared_type='short' type='s'/>
</struct>
<struct name='ccBMFontPadding' type='{_BMFontPadding=&quot;left&quot;i&quot;top&quot;i&quot;right&quot;i&quot;bottom&quot;i}'>
<field name='left' declared_type='int' type='i'/>
<field name='top' declared_type='int' type='i'/>
<field name='right' declared_type='int' type='i'/>
<field name='bottom' declared_type='int' type='i'/>
</struct>
<struct name='ccBezierConfig' type64='{_ccBezierConfig=&quot;endPosition&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;controlPoint_1&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;controlPoint_2&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}}' type='{_ccBezierConfig=&quot;endPosition&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;controlPoint_1&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;controlPoint_2&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}}'>
<field name='endPosition' declared_type='CGPoint' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}'/>
<field name='controlPoint_1' declared_type='CGPoint' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}'/>
<field name='controlPoint_2' declared_type='CGPoint' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}'/>
</struct>
<struct name='ccBlendFunc' type='{_ccBlendFunc=&quot;src&quot;I&quot;dst&quot;I}'>
<field name='src' declared_type='GLenum' type='I'/>
<field name='dst' declared_type='GLenum' type='I'/>
</struct>
<struct name='ccCArray' type64='{ccArray=&quot;num&quot;Q&quot;max&quot;Q&quot;arr&quot;^@}' type='{ccArray=&quot;num&quot;I&quot;max&quot;I&quot;arr&quot;^@}'>
<field name='num' declared_type='NSUInteger' type64='Q' type='I'/>
<field name='max' declared_type='NSUInteger' type64='Q' type='I'/>
<field name='arr' declared_type='CCARRAY_ID*' type='^@'/>
</struct>
<struct name='ccColor3B' type='{_ccColor3B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C}'>
<field name='r' declared_type='GLubyte' type='C'/>
<field name='g' declared_type='GLubyte' type='C'/>
<field name='b' declared_type='GLubyte' type='C'/>
</struct>
<struct name='ccColor4B' type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}'>
<field name='r' declared_type='GLubyte' type='C'/>
<field name='g' declared_type='GLubyte' type='C'/>
<field name='b' declared_type='GLubyte' type='C'/>
<field name='a' declared_type='GLubyte' type='C'/>
</struct>
<struct name='ccColor4F' type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}'>
<field name='r' declared_type='GLfloat' type='f'/>
<field name='g' declared_type='GLfloat' type='f'/>
<field name='b' declared_type='GLfloat' type='f'/>
<field name='a' declared_type='GLfloat' type='f'/>
</struct>
<struct name='ccGridSize' type64='{_ccGridSize=&quot;x&quot;q&quot;y&quot;q}' type='{_ccGridSize=&quot;x&quot;i&quot;y&quot;i}'>
<field name='x' declared_type='NSInteger' type64='q' type='i'/>
<field name='y' declared_type='NSInteger' type64='q' type='i'/>
</struct>
<struct name='ccPointSprite' type='{_ccPointSprite=&quot;pos&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;color&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;size&quot;f}'>
<field name='pos' declared_type='ccVertex2F' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}'/>
<field name='color' declared_type='ccColor4B' type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}'/>
<field name='size' declared_type='GLfloat' type='f'/>
</struct>
<struct name='ccQuad2' type='{_ccQuad2=&quot;tl&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;tr&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;bl&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;br&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}}'>
<field name='tl' declared_type='ccVertex2F' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}'/>
<field name='tr' declared_type='ccVertex2F' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}'/>
<field name='bl' declared_type='ccVertex2F' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}'/>
<field name='br' declared_type='ccVertex2F' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}'/>
</struct>
<struct name='ccQuad3' type='{_ccQuad3=&quot;bl&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;br&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;tl&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;tr&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}}'>
<field name='bl' declared_type='ccVertex3F' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'/>
<field name='br' declared_type='ccVertex3F' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'/>
<field name='tl' declared_type='ccVertex3F' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'/>
<field name='tr' declared_type='ccVertex3F' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'/>
</struct>
<struct name='ccTex2F' type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}'>
<field name='u' declared_type='GLfloat' type='f'/>
<field name='v' declared_type='GLfloat' type='f'/>
</struct>
<struct name='ccTexParams' type='{_ccTexParams=&quot;minFilter&quot;I&quot;magFilter&quot;I&quot;wrapS&quot;I&quot;wrapT&quot;I}'>
<field name='minFilter' declared_type='GLuint' type='I'/>
<field name='magFilter' declared_type='GLuint' type='I'/>
<field name='wrapS' declared_type='GLuint' type='I'/>
<field name='wrapT' declared_type='GLuint' type='I'/>
</struct>
<struct name='ccV2F_C4B_T2F' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'>
<field name='vertices' declared_type='ccVertex2F' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}'/>
<field name='colors' declared_type='ccColor4B' type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}'/>
<field name='texCoords' declared_type='ccTex2F' type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}'/>
</struct>
<struct name='ccV2F_C4B_T2F_Quad' type='{_ccV2F_C4B_T2F_Quad=&quot;bl&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tl&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}'>
<field name='bl' declared_type='ccV2F_C4B_T2F' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
<field name='br' declared_type='ccV2F_C4B_T2F' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
<field name='tl' declared_type='ccV2F_C4B_T2F' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
<field name='tr' declared_type='ccV2F_C4B_T2F' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
</struct>
<struct name='ccV2F_C4F_T2F' type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'>
<field name='vertices' declared_type='ccVertex2F' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}'/>
<field name='colors' declared_type='ccColor4F' type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}'/>
<field name='texCoords' declared_type='ccTex2F' type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}'/>
</struct>
<struct name='ccV2F_C4F_T2F_Quad' type='{_ccV2F_C4F_T2F_Quad=&quot;bl&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tl&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}'>
<field name='bl' declared_type='ccV2F_C4F_T2F' type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
<field name='br' declared_type='ccV2F_C4F_T2F' type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
<field name='tl' declared_type='ccV2F_C4F_T2F' type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
<field name='tr' declared_type='ccV2F_C4F_T2F' type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
</struct>
<struct name='ccV3F_C4B_T2F' type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'>
<field name='vertices' declared_type='ccVertex3F' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'/>
<field name='colors' declared_type='ccColor4B' type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}'/>
<field name='texCoords' declared_type='ccTex2F' type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}'/>
</struct>
<struct name='ccV3F_C4B_T2F_Quad' type='{_ccV3F_C4B_T2F_Quad=&quot;tl&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;bl&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}'>
<field name='tl' declared_type='ccV3F_C4B_T2F' type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
<field name='bl' declared_type='ccV3F_C4B_T2F' type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
<field name='tr' declared_type='ccV3F_C4B_T2F' type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
<field name='br' declared_type='ccV3F_C4B_T2F' type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
</struct>
<struct name='ccV3F_C4F_T2F' type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'>
<field name='vertices' declared_type='ccVertex3F' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'/>
<field name='colors' declared_type='ccColor4F' type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}'/>
<field name='texCoords' declared_type='ccTex2F' type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}'/>
</struct>
<struct name='ccV3F_C4F_T2F_Quad' type='{_ccV3F_C4F_T2F_Quad=&quot;tl&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;bl&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}'>
<field name='tl' declared_type='ccV3F_C4F_T2F' type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
<field name='bl' declared_type='ccV3F_C4F_T2F' type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
<field name='tr' declared_type='ccV3F_C4F_T2F' type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
<field name='br' declared_type='ccV3F_C4F_T2F' type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
</struct>
<struct name='ccVertex2F' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}'>
<field name='x' declared_type='GLfloat' type='f'/>
<field name='y' declared_type='GLfloat' type='f'/>
</struct>
<struct name='ccVertex3F' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'>
<field name='x' declared_type='GLfloat' type='f'/>
<field name='y' declared_type='GLfloat' type='f'/>
<field name='z' declared_type='GLfloat' type='f'/>
</struct>
<struct name='sCCParticle' type64='{sCCParticle=&quot;pos&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;startPos&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;color&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;deltaColor&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;size&quot;f&quot;deltaSize&quot;f&quot;rotation&quot;f&quot;deltaRotation&quot;f&quot;timeToLive&quot;f&quot;atlasIndex&quot;Q&quot;mode&quot;(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})}' type='{sCCParticle=&quot;pos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;startPos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;color&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;deltaColor&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;size&quot;f&quot;deltaSize&quot;f&quot;rotation&quot;f&quot;deltaRotation&quot;f&quot;timeToLive&quot;f&quot;atlasIndex&quot;I&quot;mode&quot;(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})}'>
<field name='pos' declared_type='CGPoint' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}'/>
<field name='startPos' declared_type='CGPoint' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}'/>
<field name='color' declared_type='ccColor4F' type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}'/>
<field name='deltaColor' declared_type='ccColor4F' type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}'/>
<field name='size' declared_type='float' type='f'/>
<field name='deltaSize' declared_type='float' type='f'/>
<field name='rotation' declared_type='float' type='f'/>
<field name='deltaRotation' declared_type='float' type='f'/>
<field name='timeToLive' declared_type='ccTime' type='f'/>
<field name='atlasIndex' declared_type='NSUInteger' type64='Q' type='I'/>
<field name='mode' declared_type='union sCCParticle::' type64='(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})' type='(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})'/>
</struct>
<struct name='sImageTGA' type='{sImageTGA=&quot;status&quot;i&quot;type&quot;C&quot;pixelDepth&quot;C&quot;width&quot;s&quot;height&quot;s&quot;imageData&quot;*&quot;flipped&quot;i}'>
<field name='status' declared_type='int' type='i'/>
<field name='type' declared_type='unsigned char' type='C'/>
<field name='pixelDepth' declared_type='unsigned char' type='C'/>
<field name='width' declared_type='short' type='s'/>
<field name='height' declared_type='short' type='s'/>
<field name='imageData' declared_type='unsigned char*' type='*'/>
<field name='flipped' declared_type='int' type='i'/>
</struct>
<struct name='tCCParticle' type64='{sCCParticle=&quot;pos&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;startPos&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;color&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;deltaColor&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;size&quot;f&quot;deltaSize&quot;f&quot;rotation&quot;f&quot;deltaRotation&quot;f&quot;timeToLive&quot;f&quot;atlasIndex&quot;Q&quot;mode&quot;(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})}' type='{sCCParticle=&quot;pos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;startPos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;color&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;deltaColor&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;size&quot;f&quot;deltaSize&quot;f&quot;rotation&quot;f&quot;deltaRotation&quot;f&quot;timeToLive&quot;f&quot;atlasIndex&quot;I&quot;mode&quot;(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})}'>
<field name='pos' declared_type='CGPoint' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}'/>
<field name='startPos' declared_type='CGPoint' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}'/>
<field name='color' declared_type='ccColor4F' type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}'/>
<field name='deltaColor' declared_type='ccColor4F' type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}'/>
<field name='size' declared_type='float' type='f'/>
<field name='deltaSize' declared_type='float' type='f'/>
<field name='rotation' declared_type='float' type='f'/>
<field name='deltaRotation' declared_type='float' type='f'/>
<field name='timeToLive' declared_type='ccTime' type='f'/>
<field name='atlasIndex' declared_type='NSUInteger' type64='Q' type='I'/>
<field name='mode' declared_type='union sCCParticle::' type64='(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})' type='(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})'/>
</struct>
<struct name='tHashElement' type64='{_hashElement=&quot;actions&quot;^{ccArray}&quot;actionIndex&quot;Q&quot;currentActionSalvaged&quot;B&quot;paused&quot;B&quot;hh&quot;{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}&quot;target&quot;@&quot;currentAction&quot;@&quot;CCAction&quot;}' type='{_hashElement=&quot;actions&quot;^{ccArray}&quot;actionIndex&quot;I&quot;currentActionSalvaged&quot;B&quot;paused&quot;B&quot;hh&quot;{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}&quot;target&quot;@&quot;currentAction&quot;@&quot;CCAction&quot;}'>
<field name='actions' declared_type='struct ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<field name='actionIndex' declared_type='NSUInteger' type64='Q' type='I'/>
<field name='currentActionSalvaged' declared_type='BOOL' type='B'/>
<field name='paused' declared_type='BOOL' type='B'/>
<field name='hh' declared_type='UT_hash_handle' type='{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}'/>
<field name='target' declared_type='id' type='@'/>
<field name='currentAction' declared_type='CCAction*' type='@&quot;CCAction&quot;'/>
</struct>
<struct name='tImageTGA' type='{sImageTGA=&quot;status&quot;i&quot;type&quot;C&quot;pixelDepth&quot;C&quot;width&quot;s&quot;height&quot;s&quot;imageData&quot;*&quot;flipped&quot;i}'>
<field name='status' declared_type='int' type='i'/>
<field name='type' declared_type='unsigned char' type='C'/>
<field name='pixelDepth' declared_type='unsigned char' type='C'/>
<field name='width' declared_type='short' type='s'/>
<field name='height' declared_type='short' type='s'/>
<field name='imageData' declared_type='unsigned char*' type='*'/>
<field name='flipped' declared_type='int' type='i'/>
</struct>
<constant name='ccBLACK' declared_type='ccColor3B' const='true' type='{_ccColor3B=CCC}'/>
<constant name='ccBLUE' declared_type='ccColor3B' const='true' type='{_ccColor3B=CCC}'/>
<constant name='ccGRAY' declared_type='ccColor3B' const='true' type='{_ccColor3B=CCC}'/>
<constant name='ccGREEN' declared_type='ccColor3B' const='true' type='{_ccColor3B=CCC}'/>
<constant name='ccMAGENTA' declared_type='ccColor3B' const='true' type='{_ccColor3B=CCC}'/>
<constant name='ccORANGE' declared_type='ccColor3B' const='true' type='{_ccColor3B=CCC}'/>
<constant name='ccPositionColor_frag' declared_type='GLchar*' const='true' type='*'/>
<constant name='ccPositionColor_vert' declared_type='GLchar*' const='true' type='*'/>
<constant name='ccPositionTextureA8Color_frag' declared_type='GLchar*' const='true' type='*'/>
<constant name='ccPositionTextureA8Color_vert' declared_type='GLchar*' const='true' type='*'/>
<constant name='ccPositionTextureColorAlphaTest_frag' declared_type='GLchar*' const='true' type='*'/>
<constant name='ccPositionTextureColor_frag' declared_type='GLchar*' const='true' type='*'/>
<constant name='ccPositionTextureColor_vert' declared_type='GLchar*' const='true' type='*'/>
<constant name='ccPositionTexture_frag' declared_type='GLchar*' const='true' type='*'/>
<constant name='ccPositionTexture_uColor_frag' declared_type='GLchar*' const='true' type='*'/>
<constant name='ccPositionTexture_uColor_vert' declared_type='GLchar*' const='true' type='*'/>
<constant name='ccPositionTexture_vert' declared_type='GLchar*' const='true' type='*'/>
<constant name='ccPosition_uColor_frag' declared_type='GLchar*' const='true' type='*'/>
<constant name='ccPosition_uColor_vert' declared_type='GLchar*' const='true' type='*'/>
<constant name='ccRED' declared_type='ccColor3B' const='true' type='{_ccColor3B=CCC}'/>
<constant name='ccWHITE' declared_type='ccColor3B' const='true' type='{_ccColor3B=CCC}'/>
<constant name='ccYELLOW' declared_type='ccColor3B' const='true' type='{_ccColor3B=CCC}'/>
<constant name='kCCProfilerCategoryBatchSprite' declared_type='BOOL' type='B'/>
<constant name='kCCProfilerCategoryParticles' declared_type='BOOL' type='B'/>
<constant name='kCCProfilerCategorySprite' declared_type='BOOL' type='B'/>
<string_constant name='CCAnimationFrameDisplayedNotification' nsstring='true' value='CCAnimationFrameDisplayedNotification'/>
<string_constant name='kCCAttributeNameColor' nsstring='true' value='a_color'/>
<string_constant name='kCCAttributeNamePosition' nsstring='true' value='a_position'/>
<string_constant name='kCCAttributeNameTexCoord' nsstring='true' value='a_texCoord'/>
<string_constant name='kCCShader_PositionColor' nsstring='true' value='ShaderPositionColor'/>
<string_constant name='kCCShader_PositionTexture' nsstring='true' value='ShaderPositionTexture'/>
<string_constant name='kCCShader_PositionTextureA8Color' nsstring='true' value='ShaderPositionTextureA8Color'/>
<string_constant name='kCCShader_PositionTextureColor' nsstring='true' value='ShaderPositionTextureColor'/>
<string_constant name='kCCShader_PositionTextureColorAlphaTest' nsstring='true' value='ShaderPositionTextureColorAlphaTest'/>
<string_constant name='kCCShader_PositionTexture_uColor' nsstring='true' value='ShaderPositionTexture_uColor'/>
<string_constant name='kCCShader_Position_uColor' nsstring='true' value='ShaderPosition_uColor'/>
<string_constant name='kCCUniformAlphaTestValue' value='u_alpha_value'/>
<string_constant name='kCCUniformMVPMatrix_s' value='u_MVPMatrix'/>
<string_constant name='kCCUniformSampler_s' value='u_texture'/>
<enum name='CCSpriteIndexNotInitialized' value='4294967295'/>
<enum name='CCTMXOrientationHex' value='1'/>
<enum name='CCTMXOrientationIso' value='2'/>
<enum name='CCTMXOrientationOrtho' value='0'/>
<enum name='CCTextAlignmentLeft' value='0'/>
<enum name='CCZ_COMPRESSION_BZIP2' value='1'/>
<enum name='CCZ_COMPRESSION_GZIP' value='2'/>
<enum name='CCZ_COMPRESSION_NONE' value='3'/>
<enum name='CCZ_COMPRESSION_ZLIB' value='0'/>
<enum name='CC_BLEND_DST' value='771'/>
<enum name='CC_BLEND_SRC' value='1'/>
<enum name='CC_DIRECTOR_IOS_USE_BACKGROUND_THREAD' value='0'/>
<enum name='CC_DIRECTOR_MAC_THREAD' value='0'/>
<enum name='CC_DIRECTOR_STATS_INTERVAL' value='0.1f'/>
<enum name='CC_ENABLE_DEPRECATED' value='1'/>
<enum name='CC_ENABLE_GL_STATE_CACHE' value='0'/>
<enum name='CC_ENABLE_PROFILERS' value='0'/>
<enum name='CC_FIX_ARTIFACTS_BY_STRECHING_TEXEL' value='0'/>
<enum name='CC_GL_ALL' value='8'/>
<enum name='CC_GL_BLEND' value='8'/>
<enum name='CC_GL_DEPTH24_STENCIL8' value='35056'/>
<enum name='CC_LABELATLAS_DEBUG_DRAW' value='0'/>
<enum name='CC_LABELBMFONT_DEBUG_DRAW' value='0'/>
<enum name='CC_MAC_USE_DISPLAY_LINK_THREAD' value='0'/>
<enum name='CC_MAC_USE_MAIN_THREAD' value='2'/>
<enum name='CC_MAC_USE_OWN_THREAD' value='1'/>
<enum name='CC_NODE_RENDER_SUBPIXEL' value='1'/>
<enum name='CC_PVRMIPMAP_MAX' value='16'/>
<enum name='CC_SPRITEBATCHNODE_RENDER_SUBPIXEL' value='1'/>
<enum name='CC_SPRITE_DEBUG_DRAW' value='0'/>
<enum name='CC_TEXTURE_ATLAS_USE_TRIANGLE_STRIP' value='0'/>
<enum name='CC_TEXTURE_ATLAS_USE_VAO' value='1'/>
<enum name='CC_USE_LA88_LABELS' value='1'/>
<enum name='COCOS2D_VERSION' value='131072'/>
<enum name='HASH_BKT_CAPACITY_THRESH' value='10'/>
<enum name='HASH_BLOOM_SIGNATURE' value='2971803890'/>
<enum name='HASH_INITIAL_NUM_BUCKETS' value='32'/>
<enum name='HASH_INITIAL_NUM_BUCKETS_LOG2' value='5'/>
<enum name='HASH_SIGNATURE' value='2685476833'/>
<enum name='TGA_ERROR_COMPRESSED_FILE' value='5'/>
<enum name='TGA_ERROR_FILE_OPEN' value='1'/>
<enum name='TGA_ERROR_INDEXED_COLOR' value='3'/>
<enum name='TGA_ERROR_MEMORY' value='4'/>
<enum name='TGA_ERROR_READING_FILE' value='2'/>
<enum name='TGA_OK' value='0'/>
<enum name='TMXLayerAttribBase64' value='2'/>
<enum name='TMXLayerAttribGzip' value='4'/>
<enum name='TMXLayerAttribNone' value='1'/>
<enum name='TMXLayerAttribZlib' value='8'/>
<enum name='TMXPropertyLayer' value='2'/>
<enum name='TMXPropertyMap' value='1'/>
<enum name='TMXPropertyNone' value='0'/>
<enum name='TMXPropertyObject' value='4'/>
<enum name='TMXPropertyObjectGroup' value='3'/>
<enum name='TMXPropertyTile' value='5'/>
<enum name='kCCActionTagInvalid' value='-1'/>
<enum name='kCCDirectorProjection2D' value='0'/>
<enum name='kCCDirectorProjection3D' value='1'/>
<enum name='kCCDirectorProjectionCustom' value='2'/>
<enum name='kCCDirectorProjectionDefault' value='1'/>
<enum name='kCCDirectorResize_AutoScale' value='1'/>
<enum name='kCCDirectorResize_NoScale' value='0'/>
<enum name='kCCFlipedAll' value='3758096384'/>
<enum name='kCCFlippedMask' value='536870911'/>
<enum name='kCCImageFormatJPEG' value='0'/>
<enum name='kCCImageFormatJPG' value='0'/>
<enum name='kCCImageFormatPNG' value='1'/>
<enum name='kCCItemSize' value='32'/>
<enum name='kCCLabelAutomaticWidth' value='-1'/>
<enum name='kCCLineBreakModeCharacterWrap' value='1'/>
<enum name='kCCLineBreakModeClip' value='2'/>
<enum name='kCCLineBreakModeHeadTruncation' value='3'/>
<enum name='kCCLineBreakModeMiddleTruncation' value='5'/>
<enum name='kCCLineBreakModeTailTruncation' value='4'/>
<enum name='kCCLineBreakModeWordWrap' value='0'/>
<enum name='kCCMacVersion_10_6' value='168165376'/>
<enum name='kCCMacVersion_10_7' value='168230912'/>
<enum name='kCCMacVersion_10_8' value='168296448'/>
<enum name='kCCMenuHandlerPriority' value='-128'/>
<enum name='kCCMenuStateTrackingTouch' value='1'/>
<enum name='kCCMenuStateWaiting' value='0'/>
<enum name='kCCMenuTouchPriority' value='0'/>
<enum name='kCCNodeTagInvalid' value='-1'/>
<enum name='kCCParticleDurationInfinity' value='-1'/>
<enum name='kCCParticleModeGravity' value='0'/>
<enum name='kCCParticleModeRadius' value='1'/>
<enum name='kCCParticleStartRadiusEqualToEndRadius' value='-1'/>
<enum name='kCCParticleStartSizeEqualToEndSize' value='-1'/>
<enum name='kCCPositionTypeFree' value='0'/>
<enum name='kCCPositionTypeGrouped' value='2'/>
<enum name='kCCPositionTypeRelative' value='1'/>
<enum name='kCCPriorityNonSystemMin' value='-2147483647'/>
<enum name='kCCPrioritySystem' value='-2147483648'/>
<enum name='kCCProgressTimerTypeBar' value='1'/>
<enum name='kCCProgressTimerTypeRadial' value='0'/>
<enum name='kCCRepeatForever' value='4294967294'/>
<enum name='kCCResolutionMac' value='1'/>
<enum name='kCCResolutionMacRetinaDisplay' value='2'/>
<enum name='kCCResolutionUnknown' value='0'/>
<enum name='kCCTMXTileDiagonalFlag' value='536870912'/>
<enum name='kCCTMXTileHorizontalFlag' value='2147483648'/>
<enum name='kCCTMXTileVerticalFlag' value='1073741824'/>
<enum name='kCCTextAlignmentCenter' value='1'/>
<enum name='kCCTextAlignmentLeft' value='0'/>
<enum name='kCCTextAlignmentRight' value='2'/>
<enum name='kCCTexture2DPixelFormat_A8' value='3'/>
<enum name='kCCTexture2DPixelFormat_AI88' value='5'/>
<enum name='kCCTexture2DPixelFormat_Default' value='0'/>
<enum name='kCCTexture2DPixelFormat_I8' value='4'/>
<enum name='kCCTexture2DPixelFormat_PVRTC2' value='9'/>
<enum name='kCCTexture2DPixelFormat_PVRTC4' value='8'/>
<enum name='kCCTexture2DPixelFormat_RGB565' value='2'/>
<enum name='kCCTexture2DPixelFormat_RGB5A1' value='7'/>
<enum name='kCCTexture2DPixelFormat_RGB888' value='1'/>
<enum name='kCCTexture2DPixelFormat_RGBA4444' value='6'/>
<enum name='kCCTexture2DPixelFormat_RGBA8888' value='0'/>
<enum name='kCCUniformMVPMatrix' value='0'/>
<enum name='kCCUniformSampler' value='1'/>
<enum name='kCCUniform_MAX' value='2'/>
<enum name='kCCVertexAttribFlag_Color' value='2'/>
<enum name='kCCVertexAttribFlag_None' value='0'/>
<enum name='kCCVertexAttribFlag_PosColorTex' value='7'/>
<enum name='kCCVertexAttribFlag_Position' value='1'/>
<enum name='kCCVertexAttribFlag_TexCoords' value='4'/>
<enum name='kCCVertexAttrib_Color' value='1'/>
<enum name='kCCVertexAttrib_MAX' value='3'/>
<enum name='kCCVertexAttrib_Position' value='0'/>
<enum name='kCCVertexAttrib_TexCoords' value='2'/>
<enum name='kCCVerticalTextAlignmentBottom' value='2'/>
<enum name='kCCVerticalTextAlignmentCenter' value='1'/>
<enum name='kCCVerticalTextAlignmentTop' value='0'/>
<enum name='kCCiOSVersion_4_0' value='67108864'/>
<enum name='kCCiOSVersion_4_0_1' value='67109120'/>
<enum name='kCCiOSVersion_4_1' value='67174400'/>
<enum name='kCCiOSVersion_4_2' value='67239936'/>
<enum name='kCCiOSVersion_4_2_1' value='67240192'/>
<enum name='kCCiOSVersion_4_3' value='67305472'/>
<enum name='kCCiOSVersion_4_3_1' value='67305728'/>
<enum name='kCCiOSVersion_4_3_2' value='67305984'/>
<enum name='kCCiOSVersion_4_3_3' value='67306240'/>
<enum name='kCCiOSVersion_4_3_4' value='67306496'/>
<enum name='kCCiOSVersion_4_3_5' value='67306752'/>
<enum name='kCCiOSVersion_5_0' value='83886080'/>
<enum name='kCCiOSVersion_5_0_1' value='83886336'/>
<enum name='kCCiOSVersion_5_1_0' value='83951616'/>
<enum name='kCCiOSVersion_6_0_0' value='100663296'/>
<enum name='kOrientationDownOver' value='1'/>
<enum name='kOrientationLeftOver' value='0'/>
<enum name='kOrientationRightOver' value='1'/>
<enum name='kOrientationUpOver' value='0'/>
<enum name='kParticleDurationInfinity' value='-1'/>
<enum name='kParticleStartSizeEqualToEndSize' value='-1'/>
<enum name='kPositionTypeFree' value='0'/>
<enum name='kPositionTypeGrouped' value='2'/>
<function name='CCProfilingBeginTimingBlock'>
<arg name='timerName' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CCProfilingEndTimingBlock'>
<arg name='timerName' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CCProfilingResetTimingBlock'>
<arg name='timerName' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CGAffineToGL'>
<arg name='t' declared_type='CGAffineTransform*' type64='^{CGAffineTransform=dddddd}' const='true' type='^{CGAffineTransform=ffffff}'/>
<arg name='m' declared_type='GLfloat*' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='FNTConfigLoadFile'>
<arg name='file' declared_type='NSString*' type='@'/>
<retval declared_type='CCBMFontConfiguration*' type='@'/>
</function>
<function name='FNTConfigRemoveCache'>
<retval declared_type='void' type='v'/>
</function>
<function name='GLToCGAffine'>
<arg name='m' declared_type='GLfloat*' const='true' type='^f'/>
<arg name='t' declared_type='CGAffineTransform*' type64='^{CGAffineTransform=dddddd}' type='^{CGAffineTransform=ffffff}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='base64Decode'>
<arg name='in' declared_type='unsigned char*' type='*'/>
<arg name='inLength' declared_type='unsigned int' type='I'/>
<arg name='out' declared_type='unsigned char**' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='ccArrayAppendArray'>
<arg name='arr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='plusArr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayAppendArrayWithResize'>
<arg name='arr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='plusArr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayAppendObject'>
<arg name='arr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayAppendObjectWithResize'>
<arg name='arr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayContainsObject'>
<arg name='arr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='ccArrayDoubleCapacity'>
<arg name='arr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayEnsureExtraCapacity'>
<arg name='arr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='extra' declared_type='NSUInteger' type64='Q' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayFastRemoveObject'>
<arg name='arr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayFastRemoveObjectAtIndex'>
<arg name='arr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayFree'>
<arg name='arr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayFullRemoveArray'>
<arg name='arr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='minusArr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayGetIndexOfObject'>
<arg name='arr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</function>
<function name='ccArrayInsertObjectAtIndex'>
<arg name='arr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='object' declared_type='id' type='@'/>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayMakeObjectPerformSelectorWithArrayObjects'>
<arg name='arr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='sel' declared_type='SEL' type=':'/>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayMakeObjectsPerformSelector'>
<arg name='arr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='sel' declared_type='SEL' type=':'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayMakeObjectsPerformSelectorWithObject'>
<arg name='arr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='sel' declared_type='SEL' type=':'/>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayNew'>
<arg name='capacity' declared_type='NSUInteger' type64='Q' type='I'/>
<retval declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
</function>
<function name='ccArrayRemoveAllObjects'>
<arg name='arr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayRemoveArray'>
<arg name='arr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='minusArr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayRemoveObject'>
<arg name='arr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayRemoveObjectAtIndex'>
<arg name='arr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayShrink'>
<arg name='arr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArraySwapObjectsAtIndexes'>
<arg name='arr' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='index1' declared_type='NSUInteger' type64='Q' type='I'/>
<arg name='index2' declared_type='NSUInteger' type64='Q' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayAppendArray'>
<arg name='arr' declared_type='ccCArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='plusArr' declared_type='ccCArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayAppendArrayWithResize'>
<arg name='arr' declared_type='ccCArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='plusArr' declared_type='ccCArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayAppendValue'>
<arg name='arr' declared_type='ccCArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='value' declared_type='CCARRAY_ID' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayAppendValueWithResize'>
<arg name='arr' declared_type='ccCArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='value' declared_type='CCARRAY_ID' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayContainsValue'>
<arg name='arr' declared_type='ccCArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='value' declared_type='CCARRAY_ID' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='ccCArrayDoubleCapacity'>
<arg name='arr' declared_type='ccCArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayEnsureExtraCapacity'>
<arg name='arr' declared_type='ccCArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='extra' declared_type='NSUInteger' type64='Q' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayFastRemoveValueAtIndex'>
<arg name='arr' declared_type='ccCArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayFree'>
<arg name='arr' declared_type='ccCArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayFullRemoveArray'>
<arg name='arr' declared_type='ccCArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='minusArr' declared_type='ccCArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayGetIndexOfValue'>
<arg name='arr' declared_type='ccCArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='value' declared_type='CCARRAY_ID' type='@'/>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</function>
<function name='ccCArrayInsertValueAtIndex'>
<arg name='arr' declared_type='ccCArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='value' declared_type='CCARRAY_ID' type='@'/>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayNew'>
<arg name='capacity' declared_type='NSUInteger' type64='Q' type='I'/>
<retval declared_type='ccCArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
</function>
<function name='ccCArrayRemoveAllValues'>
<arg name='arr' declared_type='ccCArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayRemoveArray'>
<arg name='arr' declared_type='ccCArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='minusArr' declared_type='ccCArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayRemoveValue'>
<arg name='arr' declared_type='ccCArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='value' declared_type='CCARRAY_ID' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayRemoveValueAtIndex'>
<arg name='arr' declared_type='ccCArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCardinalSplineAt'>
<arg name='p0' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='p1' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='p2' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='p3' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='tension' declared_type='CGFloat' type64='d' type='f'/>
<arg name='t' declared_type='ccTime' type='f'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</function>
<function name='ccDrawCardinalSpline'>
<arg name='config' declared_type='CCPointArray*' type='@'/>
<arg name='tension' declared_type='CGFloat' type64='d' type='f'/>
<arg name='segments' declared_type='NSUInteger' type64='Q' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawCatmullRom'>
<arg name='arrayOfControlPoints' declared_type='CCPointArray*' type='@'/>
<arg name='segments' declared_type='NSUInteger' type64='Q' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawCircle'>
<arg name='center' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='radius' declared_type='float' type='f'/>
<arg name='angle' declared_type='float' type='f'/>
<arg name='segments' declared_type='NSUInteger' type64='Q' type='I'/>
<arg name='drawLineToCenter' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawColor4B'>
<arg name='r' declared_type='GLubyte' type='C'/>
<arg name='g' declared_type='GLubyte' type='C'/>
<arg name='b' declared_type='GLubyte' type='C'/>
<arg name='a' declared_type='GLubyte' type='C'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawColor4F'>
<arg name='r' declared_type='GLfloat' type='f'/>
<arg name='g' declared_type='GLfloat' type='f'/>
<arg name='b' declared_type='GLfloat' type='f'/>
<arg name='a' declared_type='GLfloat' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawCubicBezier'>
<arg name='origin' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='control1' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='control2' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='destination' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='segments' declared_type='NSUInteger' type64='Q' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawLine'>
<arg name='origin' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='destination' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawPoint'>
<arg name='point' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawPoints'>
<arg name='points' declared_type='CGPoint*' type64='^{CGPoint=dd}' const='true' type='^{CGPoint=ff}'/>
<arg name='numberOfPoints' declared_type='NSUInteger' type64='Q' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawPoly'>
<arg name='vertices' declared_type='CGPoint*' type64='^{CGPoint=dd}' const='true' type='^{CGPoint=ff}'/>
<arg name='numOfVertices' declared_type='NSUInteger' type64='Q' type='I'/>
<arg name='closePolygon' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawQuadBezier'>
<arg name='origin' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='control' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='destination' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='segments' declared_type='NSUInteger' type64='Q' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawRect'>
<arg name='origin' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='destination' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawSolidPoly'>
<arg name='poli' declared_type='CGPoint*' type64='^{CGPoint=dd}' const='true' type='^{CGPoint=ff}'/>
<arg name='numberOfPoints' declared_type='NSUInteger' type64='Q' type='I'/>
<arg name='color' declared_type='ccColor4F' type='{ccColor4F=ffff}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawSolidRect'>
<arg name='origin' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='destination' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='color' declared_type='ccColor4F' type='{ccColor4F=ffff}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLActiveTexture'>
<arg name='textureEnum' declared_type='GLenum' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLBindTexture2D'>
<arg name='textureId' declared_type='GLuint' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLBlendFunc'>
<arg name='sfactor' declared_type='GLenum' type='I'/>
<arg name='dfactor' declared_type='GLenum' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLDeleteProgram'>
<arg name='program' declared_type='GLuint' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLDeleteTexture'>
<arg name='textureId' declared_type='GLuint' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLEnable'>
<arg name='flags' declared_type='ccGLServerState' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLEnableVertexAttribs'>
<arg name='flags' declared_type='unsigned int' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLGetActiveTexture'>
<retval declared_type='GLenum' type='I'/>
</function>
<function name='ccGLInvalidateStateCache'>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLUniformModelViewProjectionMatrix'>
<arg name='program' declared_type='CCGLProgram*' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLUseProgram'>
<arg name='program' declared_type='GLuint' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccInflateCCZFile'>
<arg name='filename' declared_type='char*' const='true' type='*'/>
<arg name='out' declared_type='unsigned char**' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='ccInflateGZipFile'>
<arg name='filename' declared_type='char*' const='true' type='*'/>
<arg name='out' declared_type='unsigned char**' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='ccInflateMemory'>
<arg name='in' declared_type='unsigned char*' type='*'/>
<arg name='inLength' declared_type='unsigned int' type='I'/>
<arg name='out' declared_type='unsigned char**' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='ccInflateMemoryWithHint'>
<arg name='in' declared_type='unsigned char*' type='*'/>
<arg name='inLength' declared_type='unsigned int' type='I'/>
<arg name='out' declared_type='unsigned char**' type='^*'/>
<arg name='outLenghtHint' declared_type='unsigned int' type='I'/>
<retval declared_type='int' type='i'/>
</function>
<function name='ccLoadFileIntoMemory'>
<arg name='filename' declared_type='char*' const='true' type='*'/>
<arg name='out' declared_type='unsigned char**' type='^*'/>
<retval declared_type='NSInteger' type64='q' type='i'/>
</function>
<function name='ccNextPOT'>
<arg name='value' declared_type='unsigned long' type64='Q' type='L'/>
<retval declared_type='unsigned long' type64='Q' type='L'/>
</function>
<function name='ccPointSize'>
<arg name='pointSize' declared_type='GLfloat' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccSetProjectionMatrixDirty'>
<retval declared_type='void' type='v'/>
</function>
<function name='ccVertexLineIntersect'>
<arg name='Ax' declared_type='float' type='f'/>
<arg name='Ay' declared_type='float' type='f'/>
<arg name='Bx' declared_type='float' type='f'/>
<arg name='By' declared_type='float' type='f'/>
<arg name='Cx' declared_type='float' type='f'/>
<arg name='Cy' declared_type='float' type='f'/>
<arg name='Dx' declared_type='float' type='f'/>
<arg name='Dy' declared_type='float' type='f'/>
<arg name='T' declared_type='float*' type='^f'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='ccVertexLineToPolygon'>
<arg name='points' declared_type='CGPoint*' type64='^{CGPoint=dd}' type='^{CGPoint=ff}'/>
<arg name='stroke' declared_type='float' type='f'/>
<arg name='vertices' declared_type='ccVertex2F*' type='^{_ccVertex2F=ff}'/>
<arg name='offset' declared_type='NSUInteger' type64='Q' type='I'/>
<arg name='nuPoints' declared_type='NSUInteger' type64='Q' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='cc_insertionSort'>
<arg name='arr' declared_type='ccCArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='comparator' function_pointer='true' declared_type='cc_comparator' type='^?'>
<arg declared_type='void*' const='true' type='^v'/>
<arg declared_type='void*' const='true' type='^v'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='cc_mergesortL'>
<arg name='array' declared_type='ccCArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
<arg name='width' declared_type='size_t' type64='Q' type='L'/>
<arg name='comparator' function_pointer='true' declared_type='cc_comparator' type='^?'>
<arg declared_type='void*' const='true' type='^v'/>
<arg declared_type='void*' const='true' type='^v'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='cc_pointerswap'>
<arg name='a' declared_type='void*' type='^v'/>
<arg name='b' declared_type='void*' type='^v'/>
<arg name='width' declared_type='size_t' type64='Q' type='L'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccc3' inline='true'>
<arg name='r' declared_type='GLubyte' const='true' type='C'/>
<arg name='g' declared_type='GLubyte' const='true' type='C'/>
<arg name='b' declared_type='GLubyte' const='true' type='C'/>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</function>
<function name='ccc4' inline='true'>
<arg name='r' declared_type='GLubyte' const='true' type='C'/>
<arg name='g' declared_type='GLubyte' const='true' type='C'/>
<arg name='b' declared_type='GLubyte' const='true' type='C'/>
<arg name='o' declared_type='GLubyte' const='true' type='C'/>
<retval declared_type='ccColor4B' type='{_ccColor4B=CCCC}'/>
</function>
<function name='ccc4FEqual' inline='true'>
<arg name='a' declared_type='ccColor4F' type='{ccColor4F=ffff}'/>
<arg name='b' declared_type='ccColor4F' type='{ccColor4F=ffff}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='ccc4FFromccc3B' inline='true'>
<arg name='c' declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
<retval declared_type='ccColor4F' type='{ccColor4F=ffff}'/>
</function>
<function name='ccc4FFromccc4B' inline='true'>
<arg name='c' declared_type='ccColor4B' type='{_ccColor4B=CCCC}'/>
<retval declared_type='ccColor4F' type='{ccColor4F=ffff}'/>
</function>
<function name='ccc4f' inline='true'>
<arg name='r' declared_type='GLfloat' const='true' type='f'/>
<arg name='g' declared_type='GLfloat' const='true' type='f'/>
<arg name='b' declared_type='GLfloat' const='true' type='f'/>
<arg name='a' declared_type='GLfloat' const='true' type='f'/>
<retval declared_type='ccColor4F' type='{ccColor4F=ffff}'/>
</function>
<function name='ccg' inline='true'>
<arg name='x' declared_type='NSInteger' type64='q' const='true' type='i'/>
<arg name='y' declared_type='NSInteger' type64='q' const='true' type='i'/>
<retval declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}'/>
</function>
<function name='ccpAdd' inline='true'>
<arg name='v1' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<arg name='v2' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</function>
<function name='ccpAngle'>
<arg name='a' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='b' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<retval declared_type='float' type='f'/>
</function>
<function name='ccpAngleSigned'>
<arg name='a' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='b' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<retval declared_type='float' type='f'/>
</function>
<function name='ccpClamp'>
<arg name='p' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='from' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='to' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</function>
<function name='ccpCompMult'>
<arg name='a' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='b' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</function>
<function name='ccpCompOp'>
<arg name='p' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='opFunc' function_pointer='true' declared_type='float (*)(float)' type='^?'>
<arg declared_type='float' type='f'/>
<retval declared_type='float' type='f'/>
</arg>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</function>
<function name='ccpCross' inline='true'>
<arg name='v1' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<arg name='v2' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<retval declared_type='CGFloat' type64='d' type='f'/>
</function>
<function name='ccpDistance'>
<arg name='v1' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<arg name='v2' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<retval declared_type='CGFloat' type64='d' type='f'/>
</function>
<function name='ccpDistanceSQ' inline='true'>
<arg name='p1' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<arg name='p2' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<retval declared_type='CGFloat' type64='d' type='f'/>
</function>
<function name='ccpDot' inline='true'>
<arg name='v1' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<arg name='v2' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<retval declared_type='CGFloat' type64='d' type='f'/>
</function>
<function name='ccpForAngle'>
<arg name='a' declared_type='CGFloat' type64='d' const='true' type='f'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</function>
<function name='ccpFromSize'>
<arg name='s' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</function>
<function name='ccpFuzzyEqual'>
<arg name='a' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='b' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='variance' declared_type='float' type='f'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='ccpIntersectPoint'>
<arg name='A' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='B' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='C' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='D' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</function>
<function name='ccpLength'>
<arg name='v' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<retval declared_type='CGFloat' type64='d' type='f'/>
</function>
<function name='ccpLengthSQ' inline='true'>
<arg name='v' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<retval declared_type='CGFloat' type64='d' type='f'/>
</function>
<function name='ccpLerp'>
<arg name='a' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='b' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='alpha' declared_type='float' type='f'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</function>
<function name='ccpLineIntersect'>
<arg name='p1' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='p2' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='p3' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='p4' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='s' declared_type='float*' type='^f'/>
<arg name='t' declared_type='float*' type='^f'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='ccpMidpoint' inline='true'>
<arg name='v1' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<arg name='v2' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</function>
<function name='ccpMult' inline='true'>
<arg name='v' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<arg name='s' declared_type='CGFloat' type64='d' const='true' type='f'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</function>
<function name='ccpNeg' inline='true'>
<arg name='v' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</function>
<function name='ccpNormalize'>
<arg name='v' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</function>
<function name='ccpPerp' inline='true'>
<arg name='v' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</function>
<function name='ccpProject' inline='true'>
<arg name='v1' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<arg name='v2' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</function>
<function name='ccpRPerp' inline='true'>
<arg name='v' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</function>
<function name='ccpRotate' inline='true'>
<arg name='v1' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<arg name='v2' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</function>
<function name='ccpRotateByAngle'>
<arg name='v' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='pivot' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='angle' declared_type='float' type='f'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</function>
<function name='ccpSegmentIntersect'>
<arg name='A' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='B' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='C' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<arg name='D' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='ccpSub' inline='true'>
<arg name='v1' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<arg name='v2' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</function>
<function name='ccpToAngle'>
<arg name='v' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<retval declared_type='CGFloat' type64='d' type='f'/>
</function>
<function name='ccpUnrotate' inline='true'>
<arg name='v1' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<arg name='v2' declared_type='CGPoint' type64='{CGPoint=dd}' const='true' type='{CGPoint=ff}'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</function>
<function name='clampf'>
<arg name='value' declared_type='float' type='f'/>
<arg name='min_inclusive' declared_type='float' type='f'/>
<arg name='max_inclusive' declared_type='float' type='f'/>
<retval declared_type='float' type='f'/>
</function>
<function name='cocos2dVersion'>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='tgaDestroy'>
<arg name='info' declared_type='tImageTGA*' type='^{sImageTGA=iCCss*i}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='tgaLoad'>
<arg name='filename' declared_type='char*' const='true' type='*'/>
<retval declared_type='tImageTGA*' type='^{sImageTGA=iCCss*i}'/>
</function>
<function name='tgaLoadHeader'>
<arg name='file' declared_type='FILE*' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg name='info' declared_type='tImageTGA*' type='^{sImageTGA=iCCss*i}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='tgaLoadImageData'>
<arg name='file' declared_type='FILE*' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg name='info' declared_type='tImageTGA*' type='^{sImageTGA=iCCss*i}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='tgaRGBtogreyscale'>
<arg name='info' declared_type='tImageTGA*' type='^{sImageTGA=iCCss*i}'/>
<retval declared_type='void' type='v'/>
</function>
<function_alias name='CCNSPointToCGPoint' original='NSPointToCGPoint'/>
<function_alias name='CCNSRectToCGRect' original='NSRectToCGRect'/>
<function_alias name='CCNSSizeToCGSize' original='NSSizeToCGSize'/>
<function_alias name='glBindVertexArray' original='glBindVertexArrayAPPLE'/>
<function_alias name='glDeleteVertexArrays' original='glDeleteVertexArraysAPPLE'/>
<function_alias name='glGenVertexArrays' original='glGenVertexArraysAPPLE'/>
<class name='CCAccelAmplitude'>
<method selector='actionWithAction:duration:' class_method='true'>
<arg name='action' declared_type='CCAction*' type='@' index='0'/>
<arg name='d' declared_type='ccTime' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:duration:'>
<arg name='action' declared_type='CCAction*' type='@' index='0'/>
<arg name='d' declared_type='ccTime' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setRate:'>
<arg name='rate' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCAccelDeccelAmplitude'>
<method selector='actionWithAction:duration:' class_method='true'>
<arg name='action' declared_type='CCAction*' type='@' index='0'/>
<arg name='d' declared_type='ccTime' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:duration:'>
<arg name='action' declared_type='CCAction*' type='@' index='0'/>
<arg name='d' declared_type='ccTime' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setRate:'>
<arg name='rate' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCAction'>
<method selector='action' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='copyWithZone:'>
<arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isDone'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='originalTarget'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setTag:'>
<arg name='tag' declared_type='NSInteger' type64='q' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startWithTarget:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='step:'>
<arg name='dt' declared_type='ccTime' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stop'>
<retval declared_type='void' type='v'/>
</method>
<method selector='tag'>
<retval declared_type='NSInteger' type64='q' type='i'/>
</method>
<method selector='target'>
<retval declared_type='id' type='@'/>
</method>
<method selector='update:'>
<arg name='time' declared_type='ccTime' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCActionEase'>
<method selector='actionWithAction:' class_method='true'>
<arg name='action' declared_type='CCActionInterval*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:'>
<arg name='action' declared_type='CCActionInterval*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCActionInterval'>
<method selector='actionWithDuration:' class_method='true'>
<arg name='d' declared_type='ccTime' type='f' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='elapsed'>
<retval declared_type='ccTime' type='f'/>
</method>
<method selector='initWithDuration:'>
<arg name='d' declared_type='ccTime' type='f' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isDone'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='reverse'>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
</class>
<class name='CCActionManager'>
<method selector='addAction:target:paused:'>
<arg name='action' declared_type='CCAction*' type='@' index='0'/>
<arg name='target' declared_type='id' type='@' index='1'/>
<arg name='paused' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getActionByTag:target:'>
<arg name='tag' declared_type='NSInteger' type64='q' type='i' index='0'/>
<arg name='target' declared_type='id' type='@' index='1'/>
<retval declared_type='CCAction*' type='@'/>
</method>
<method selector='numberOfRunningActionsInTarget:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='pauseAllRunningActions'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='pauseTarget:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAction:'>
<arg name='action' declared_type='CCAction*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeActionByTag:target:'>
<arg name='tag' declared_type='NSInteger' type64='q' type='i' index='0'/>
<arg name='target' declared_type='id' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllActions'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllActionsFromTarget:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resumeTarget:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resumeTargets:'>
<arg name='targetsToResume' declared_type='NSSet*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedManager' class_method='true'>
<retval declared_type='CCActionManager*' type='@'/>
</method>
</class>
<class name='CCActionTween'>
<method selector='actionWithDuration:key:from:to:' class_method='true'>
<arg name='aDuration' declared_type='ccTime' type='f' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<arg name='from' declared_type='float' type='f' index='2'/>
<arg name='to' declared_type='float' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:key:from:to:'>
<arg name='aDuration' declared_type='ccTime' type='f' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<arg name='from' declared_type='float' type='f' index='2'/>
<arg name='to' declared_type='float' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCAnimate'>
<method selector='actionWithAnimation:' class_method='true'>
<arg name='animation' declared_type='CCAnimation*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actionWithAnimation:restoreOriginalFrame:' class_method='true'>
<arg name='animation' declared_type='CCAnimation*' type='@' index='0'/>
<arg name='restoreOriginalFrame' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actionWithDuration:animation:restoreOriginalFrame:' class_method='true'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='animation' declared_type='CCAnimation*' type='@' index='1'/>
<arg name='restoreOriginalFrame' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='animation'>
<retval declared_type='CCAnimation*' type='@'/>
</method>
<method selector='initWithAnimation:'>
<arg name='animation' declared_type='CCAnimation*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAnimation:restoreOriginalFrame:'>
<arg name='a' declared_type='CCAnimation*' type='@' index='0'/>
<arg name='restoreOriginalFrame' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:animation:restoreOriginalFrame:'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='animation' declared_type='CCAnimation*' type='@' index='1'/>
<arg name='restoreOriginalFrame' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAnimation:'>
<arg name='animation' declared_type='CCAnimation*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCAnimation'>
<method selector='addFrame:'>
<arg name='frame' declared_type='CCSpriteFrame*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addFrameWithFilename:'>
<arg name='filename' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addFrameWithTexture:rect:'>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='0'/>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSpriteFrame:'>
<arg name='frame' declared_type='CCSpriteFrame*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSpriteFrameWithFilename:'>
<arg name='filename' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSpriteFrameWithTexture:rect:'>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='0'/>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animation' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='animationWithAnimationFrames:delayPerUnit:loops:' class_method='true'>
<arg name='arrayOfAnimationFrames' declared_type='NSArray*' type='@' index='0'/>
<arg name='delayPerUnit' declared_type='float' type='f' index='1'/>
<arg name='loops' declared_type='NSUInteger' type64='Q' type='I' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='animationWithFrames:' class_method='true'>
<arg name='arrayOfSpriteFrameNames' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='animationWithFrames:delay:' class_method='true'>
<arg name='arrayOfSpriteFrameNames' declared_type='NSArray*' type='@' index='0'/>
<arg name='delay' declared_type='float' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='animationWithSpriteFrames:' class_method='true'>
<arg name='arrayOfSpriteFrameNames' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='animationWithSpriteFrames:delay:' class_method='true'>
<arg name='arrayOfSpriteFrameNames' declared_type='NSArray*' type='@' index='0'/>
<arg name='delay' declared_type='float' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='delayPerUnit'>
<retval declared_type='float' type='f'/>
</method>
<method selector='duration'>
<retval declared_type='float' type='f'/>
</method>
<method selector='frames'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='initWithAnimationFrames:delayPerUnit:loops:'>
<arg name='arrayOfAnimationFrames' declared_type='NSArray*' type='@' index='0'/>
<arg name='delayPerUnit' declared_type='float' type='f' index='1'/>
<arg name='loops' declared_type='NSUInteger' type64='Q' type='I' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFrames:'>
<arg name='arrayOfSpriteFrameNames' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFrames:delay:'>
<arg name='arrayOfSpriteFrameNames' declared_type='NSArray*' type='@' index='0'/>
<arg name='delay' declared_type='float' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSpriteFrames:'>
<arg name='arrayOfSpriteFrameNames' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSpriteFrames:delay:'>
<arg name='arrayOfSpriteFrameNames' declared_type='NSArray*' type='@' index='0'/>
<arg name='delay' declared_type='float' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='loops'>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='restoreOriginalFrame'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDelayPerUnit:'>
<arg name='delayPerUnit' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrames:'>
<arg name='frames' declared_type='NSMutableArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLoops:'>
<arg name='loops' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRestoreOriginalFrame:'>
<arg name='restoreOriginalFrame' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='totalDelayUnits'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='CCAnimationCache'>
<method selector='addAnimation:name:'>
<arg name='animation' declared_type='CCAnimation*' type='@' index='0'/>
<arg name='name' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAnimationsWithDictionary:'>
<arg name='dictionary' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAnimationsWithFile:'>
<arg name='plist' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animationByName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='CCAnimation*' type='@'/>
</method>
<method selector='purgeSharedAnimationCache' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAnimationByName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedAnimationCache' class_method='true'>
<retval declared_type='CCAnimationCache*' type='@'/>
</method>
</class>
<class name='CCAnimationFrame'>
<method selector='delayUnits'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithSpriteFrame:delayUnits:userInfo:'>
<arg name='spriteFrame' declared_type='CCSpriteFrame*' type='@' index='0'/>
<arg name='delayUnits' declared_type='float' type='f' index='1'/>
<arg name='userInfo' declared_type='NSDictionary*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDelayUnits:'>
<arg name='delayUnits' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpriteFrame:'>
<arg name='spriteFrame' declared_type='CCSpriteFrame*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg name='userInfo' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='spriteFrame'>
<retval declared_type='CCSpriteFrame*' type='@'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='CCArray'>
<method selector='addObject:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObjectsFromArray:'>
<arg name='otherArray' declared_type='CCArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObjectsFromNSArray:'>
<arg name='otherArray' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='array' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='arrayWithArray:' class_method='true'>
<arg name='otherArray' declared_type='CCArray*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='arrayWithCapacity:' class_method='true'>
<arg name='capacity' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='arrayWithNSArray:' class_method='true'>
<arg name='otherArray' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='capacity'>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='containsObject:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='exchangeObject:withObject:'>
<arg name='object1' declared_type='id' type='@' index='0'/>
<arg name='object2' declared_type='id' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='exchangeObjectAtIndex:withObjectAtIndex:'>
<arg name='index1' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<arg name='index2' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fastRemoveObject:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fastRemoveObjectAtIndex:'>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getNSArray'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='indexOfObject:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='initWithArray:'>
<arg name='otherArray' declared_type='CCArray*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithCapacity:'>
<arg name='capacity' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithNSArray:'>
<arg name='otherArray' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertObject:atIndex:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertionSort:'>
<arg name='selector' declared_type='SEL' type=':' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertionSortUsingCFuncComparator:'>
<arg name='comparator' function_pointer='true' declared_type='int (*)(void *, void *)' type='^?' index='0'>
<arg declared_type='void*' const='true' type='^v'/>
<arg declared_type='void*' const='true' type='^v'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEqualToArray:'>
<arg name='otherArray' declared_type='CCArray*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lastObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='makeObjectPerformSelectorWithArrayObjects:selector:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<arg name='aSelector' declared_type='SEL' type=':' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='makeObjectsPerformSelector:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='makeObjectsPerformSelector:withObject:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<arg name='object' declared_type='id' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mergesortLUsingCFuncComparator:'>
<arg name='comparator' function_pointer='true' declared_type='int (*)(void *, void *)' type='^?' index='0'>
<arg declared_type='void*' const='true' type='^v'/>
<arg declared_type='void*' const='true' type='^v'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectAtIndex:'>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='qsortUsingCFuncComparator:'>
<arg name='comparator' function_pointer='true' declared_type='int (*)(void *, void *)' type='^?' index='0'>
<arg declared_type='void*' const='true' type='^v'/>
<arg declared_type='void*' const='true' type='^v'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='randomObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='reduceMemoryFootprint'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeLastObject'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObject:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectAtIndex:'>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsInArray:'>
<arg name='otherArray' declared_type='CCArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceObjectAtIndex:withObject:'>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<arg name='anObject' declared_type='id' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reverseObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortUsingFunction:context:'>
<arg name='compare' function_pointer='true' declared_type='NSInteger (*)(id, id, void *)' type='^?' index='0'>
<arg declared_type='id' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='NSInteger' type64='q' type='i'/>
</arg>
<arg name='context' declared_type='void*' type='^v' index='1'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCAtlasNode'>
<method selector='atlasWithTileFile:tileWidth:tileHeight:itemsToRender:' class_method='true'>
<arg name='tile' declared_type='NSString*' type='@' index='0'/>
<arg name='w' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<arg name='h' declared_type='NSUInteger' type64='Q' type='I' index='2'/>
<arg name='c' declared_type='NSUInteger' type64='Q' type='I' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='color'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='initWithTileFile:tileWidth:tileHeight:itemsToRender:'>
<arg name='tile' declared_type='NSString*' type='@' index='0'/>
<arg name='w' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<arg name='h' declared_type='NSUInteger' type64='Q' type='I' index='2'/>
<arg name='c' declared_type='NSUInteger' type64='Q' type='I' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='opacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='quadsToDraw'>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='setBlendFunc:'>
<arg name='blendFunc' declared_type='ccBlendFunc' type='{_ccBlendFunc=II}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg name='color' declared_type='ccColor3B' type='{_ccColor3B=CCC}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg name='opacity' declared_type='GLubyte' type='C' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQuadsToDraw:'>
<arg name='quadsToDraw' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextureAtlas:'>
<arg name='textureAtlas' declared_type='CCTextureAtlas*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textureAtlas'>
<retval declared_type='CCTextureAtlas*' type='@'/>
</method>
<method selector='updateAtlasValues'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCBMFontConfiguration'>
<method selector='atlasName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='configurationWithFNTFile:' class_method='true'>
<arg name='FNTfile' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFNTfile:'>
<arg name='FNTfile' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAtlasName:'>
<arg name='atlasName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCBezierBy'>
<method selector='actionWithDuration:bezier:' class_method='true'>
<arg name='t' declared_type='ccTime' type='f' index='0'/>
<arg name='c' declared_type='ccBezierConfig' type64='{_ccBezierConfig={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}}' type='{_ccBezierConfig={CGPoint=ff}{CGPoint=ff}{CGPoint=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:bezier:'>
<arg name='t' declared_type='ccTime' type='f' index='0'/>
<arg name='c' declared_type='ccBezierConfig' type64='{_ccBezierConfig={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}}' type='{_ccBezierConfig={CGPoint=ff}{CGPoint=ff}{CGPoint=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCBlink'>
<method selector='actionWithDuration:blinks:' class_method='true'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='blinks' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:blinks:'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='blinks' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCCallBlock'>
<method selector='actionWithBlock:' class_method='true'>
<arg name='block' function_pointer='true' declared_type='void (^)()' type='@?' index='0'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='execute'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBlock:'>
<arg name='block' function_pointer='true' declared_type='void (^)()' type='@?' index='0'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCCallBlockN'>
<method selector='actionWithBlock:' class_method='true'>
<arg name='block' function_pointer='true' declared_type='void (^)(CCNode *)' type='@?' index='0'>
<arg declared_type='CCNode*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='execute'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBlock:'>
<arg name='block' function_pointer='true' declared_type='void (^)(CCNode *)' type='@?' index='0'>
<arg declared_type='CCNode*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCCallBlockO'>
<method selector='actionWithBlock:object:' class_method='true'>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='0'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='object' declared_type='id' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='execute'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBlock:object:'>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='0'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='object' declared_type='id' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='object'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setObject:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCCallFunc'>
<method selector='actionWithTarget:selector:' class_method='true'>
<arg name='t' declared_type='id' type='@' index='0'/>
<arg name='s' declared_type='SEL' type=':' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='execute'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithTarget:selector:'>
<arg name='t' declared_type='id' type='@' index='0'/>
<arg name='s' declared_type='SEL' type=':' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setTargetCallback:'>
<arg name='targetCallback' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetCallback'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCCallFuncND'>
<method selector='actionWithTarget:selector:data:' class_method='true'>
<arg name='t' declared_type='id' type='@' index='0'/>
<arg name='s' declared_type='SEL' type=':' index='1'/>
<arg name='d' declared_type='void*' type='^v' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='callbackMethod'>
<retval function_pointer='true' declared_type='CC_CALLBACK_ND' type='^?'>
<arg declared_type='id' type='@'/>
<arg declared_type='SEL' type=':'/>
<arg declared_type='id' type='@'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='initWithTarget:selector:data:'>
<arg name='t' declared_type='id' type='@' index='0'/>
<arg name='s' declared_type='SEL' type=':' index='1'/>
<arg name='d' declared_type='void*' type='^v' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setCallbackMethod:'>
<arg name='callbackMethod' function_pointer='true' declared_type='CC_CALLBACK_ND' type='^?' index='0'>
<arg declared_type='id' type='@'/>
<arg declared_type='SEL' type=':'/>
<arg declared_type='id' type='@'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCCallFuncO'>
<method selector='actionWithTarget:selector:object:' class_method='true'>
<arg name='t' declared_type='id' type='@' index='0'/>
<arg name='s' declared_type='SEL' type=':' index='1'/>
<arg name='object' declared_type='id' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTarget:selector:object:'>
<arg name='t' declared_type='id' type='@' index='0'/>
<arg name='s' declared_type='SEL' type=':' index='1'/>
<arg name='object' declared_type='id' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='object'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setObject:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCCamera'>
<method selector='centerX:centerY:centerZ:'>
<arg name='x' declared_type='float*' type='^f' index='0'/>
<arg name='y' declared_type='float*' type='^f' index='1'/>
<arg name='z' declared_type='float*' type='^f' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dirty'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='eyeX:eyeY:eyeZ:'>
<arg name='x' declared_type='float*' type='^f' index='0'/>
<arg name='y' declared_type='float*' type='^f' index='1'/>
<arg name='z' declared_type='float*' type='^f' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getZEye' class_method='true'>
<retval declared_type='float' type='f'/>
</method>
<method selector='locate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='restore'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCenterX:centerY:centerZ:'>
<arg name='x' declared_type='float' type='f' index='0'/>
<arg name='y' declared_type='float' type='f' index='1'/>
<arg name='z' declared_type='float' type='f' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDirty:'>
<arg name='dirty' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEyeX:eyeY:eyeZ:'>
<arg name='x' declared_type='float' type='f' index='0'/>
<arg name='y' declared_type='float' type='f' index='1'/>
<arg name='z' declared_type='float' type='f' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpX:upY:upZ:'>
<arg name='x' declared_type='float' type='f' index='0'/>
<arg name='y' declared_type='float' type='f' index='1'/>
<arg name='z' declared_type='float' type='f' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='upX:upY:upZ:'>
<arg name='x' declared_type='float*' type='^f' index='0'/>
<arg name='y' declared_type='float*' type='^f' index='1'/>
<arg name='z' declared_type='float*' type='^f' index='2'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCCardinalSplineTo'>
<method selector='actionWithDuration:points:tension:' class_method='true'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='points' declared_type='CCPointArray*' type='@' index='1'/>
<arg name='tension' declared_type='CGFloat' type64='d' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:points:tension:'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='points' declared_type='CCPointArray*' type='@' index='1'/>
<arg name='tension' declared_type='CGFloat' type64='d' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='points'>
<retval declared_type='CCPointArray*' type='@'/>
</method>
<method selector='setPoints:'>
<arg name='points' declared_type='CCPointArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCCatmullRomBy'>
<method selector='actionWithDuration:points:' class_method='true'>
<arg name='dt' declared_type='ccTime' type='f' index='0'/>
<arg name='points' declared_type='CCPointArray*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:points:'>
<arg name='dt' declared_type='ccTime' type='f' index='0'/>
<arg name='points' declared_type='CCPointArray*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCCatmullRomTo'>
<method selector='actionWithDuration:points:' class_method='true'>
<arg name='dt' declared_type='ccTime' type='f' index='0'/>
<arg name='points' declared_type='CCPointArray*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:points:'>
<arg name='dt' declared_type='ccTime' type='f' index='0'/>
<arg name='points' declared_type='CCPointArray*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCConfiguration'>
<method selector='OSVersion'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='checkForGLExtension:'>
<arg name='searchName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maxModelviewStackDepth'>
<retval declared_type='GLint' type='i'/>
</method>
<method selector='maxTextureSize'>
<retval declared_type='GLint' type='i'/>
</method>
<method selector='maxTextureUnits'>
<retval declared_type='GLint' type='i'/>
</method>
<method selector='sharedConfiguration' class_method='true'>
<retval declared_type='CCConfiguration*' type='@'/>
</method>
<method selector='supportsBGRA8888'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='supportsDiscardFramebuffer'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='supportsNPOT'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='supportsPVRTC'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='supportsShareableVAO'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='CCDeccelAmplitude'>
<method selector='actionWithAction:duration:' class_method='true'>
<arg name='action' declared_type='CCAction*' type='@' index='0'/>
<arg name='d' declared_type='ccTime' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:duration:'>
<arg name='action' declared_type='CCAction*' type='@' index='0'/>
<arg name='d' declared_type='ccTime' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setRate:'>
<arg name='rate' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCDirector'>
<method selector='actionManager'>
<retval declared_type='CCActionManager*' type='@'/>
</method>
<method selector='animationInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='convertEventToGL:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='convertToGL:'>
<arg name='p' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='convertToUI:'>
<arg name='p' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='createStatsLabel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='displayStats'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='drawScene'>
<retval declared_type='void' type='v'/>
</method>
<method selector='end'>
<retval declared_type='void' type='v'/>
</method>
<method selector='eventDispatcher'>
<retval declared_type='CCEventDispatcher*' type='@'/>
</method>
<method selector='getZEye'>
<retval declared_type='float' type='f'/>
</method>
<method selector='isAnimating'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPaused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='nextDeltaTimeZero'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='notificationNode'>
<retval declared_type='id' type='@'/>
</method>
<method selector='openGLView'>
<retval declared_type='CCGLView*' type='@'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='popScene'>
<retval declared_type='void' type='v'/>
</method>
<method selector='projection'>
<retval declared_type='ccDirectorProjection' type='i'/>
</method>
<method selector='purgeCachedData'>
<retval declared_type='void' type='v'/>
</method>
<method selector='pushScene:'>
<arg name='scene' declared_type='CCScene*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceScene:'>
<arg name='scene' declared_type='CCScene*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reshapeProjection:'>
<arg name='newWindowSize' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resume'>
<retval declared_type='void' type='v'/>
</method>
<method selector='runWithScene:'>
<arg name='scene' declared_type='CCScene*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='runningScene'>
<retval declared_type='CCScene*' type='@'/>
</method>
<method selector='runningThread'>
<retval declared_type='NSThread*' type='@'/>
</method>
<method selector='scheduler'>
<retval declared_type='CCScheduler*' type='@'/>
</method>
<method selector='secondsPerFrame'>
<retval declared_type='ccTime' type='f'/>
</method>
<method selector='sendCleanupToScene'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setActionManager:'>
<arg name='actionManager' declared_type='CCActionManager*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlphaBlending:'>
<arg name='on' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimationInterval:'>
<arg name='animationInterval' declared_type='NSTimeInterval' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDepthTest:'>
<arg name='on' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplayFPS:'>
<arg name='display' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplayStats:'>
<arg name='displayStats' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEventDispatcher:'>
<arg name='eventDispatcher' declared_type='CCEventDispatcher*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGLDefaultValues'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNextDeltaTimeZero:'>
<arg name='nextDeltaTimeZero' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotificationNode:'>
<arg name='notificationNode' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpenGLView:'>
<arg name='view' declared_type='CCGLView*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProjection:'>
<arg name='projection' declared_type='ccDirectorProjection' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScheduler:'>
<arg name='scheduler' declared_type='CCScheduler*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setView:'>
<arg name='view' declared_type='CCGLView*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedDirector' class_method='true'>
<retval declared_type='CCDirector*' type='@'/>
</method>
<method selector='startAnimation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopAnimation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='totalFrames'>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='view'>
<retval declared_type='CCGLView*' type='@'/>
</method>
<method selector='winSize'>
<retval declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}'/>
</method>
<method selector='winSizeInPixels'>
<retval declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}'/>
</method>
</class>
<class name='CCDirectorMac'>
<method selector='convertToLogicalCoordinates:'>
<arg name='coordinates' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='isFullScreen'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='originalWinSize'>
<retval declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}'/>
</method>
<method selector='resizeMode'>
<retval declared_type='int' type='i'/>
</method>
<method selector='setFullScreen:'>
<arg name='fullscreen' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOriginalWinSize:'>
<arg name='originalWinSize' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResizeMode:'>
<arg name='resizeMode' declared_type='int' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEaseElastic'>
<method selector='actionWithAction:period:' class_method='true'>
<arg name='action' declared_type='CCActionInterval*' type='@' index='0'/>
<arg name='period' declared_type='float' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:period:'>
<arg name='action' declared_type='CCActionInterval*' type='@' index='0'/>
<arg name='period' declared_type='float' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='period'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setPeriod:'>
<arg name='period' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEaseRateAction'>
<method selector='actionWithAction:rate:' class_method='true'>
<arg name='action' declared_type='CCActionInterval*' type='@' index='0'/>
<arg name='rate' declared_type='float' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:rate:'>
<arg name='action' declared_type='CCActionInterval*' type='@' index='0'/>
<arg name='rate' declared_type='float' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setRate:'>
<arg name='rate' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEventDispatcher'>
<method selector='addKeyboardDelegate:priority:'>
<arg name='delegate' declared_type='id' type='@' index='0'/>
<arg name='priority' declared_type='NSInteger' type64='q' type='i' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addMouseDelegate:priority:'>
<arg name='delegate' declared_type='id' type='@' index='0'/>
<arg name='priority' declared_type='NSInteger' type64='q' type='i' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addTouchDelegate:priority:'>
<arg name='delegate' declared_type='id' type='@' index='0'/>
<arg name='priority' declared_type='NSInteger' type64='q' type='i' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dispatchEvent:'>
<arg name='event' declared_type='CCEventObject*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dispatchEvents'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeAllKeyboardDelegates'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllMouseDelegates'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllTouchDelegates'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeKeyboardDelegate:'>
<arg name='delegate' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeMouseDelegate:'>
<arg name='delegate' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTouchDelegate:'>
<arg name='delegate' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDispatchEvents:'>
<arg name='dispatchEvents' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedDispatcher' class_method='true'>
<retval declared_type='CCEventDispatcher*' type='@'/>
</method>
</class>
<class name='CCFadeTo'>
<method selector='actionWithDuration:opacity:' class_method='true'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='opactiy' declared_type='GLubyte' type='C' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:opacity:'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='opacity' declared_type='GLubyte' type='C' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCFileUtils'>
<method selector='bundle'>
<retval declared_type='NSBundle*' type='@'/>
</method>
<method selector='fileManager'>
<retval declared_type='NSFileManager*' type='@'/>
</method>
<method selector='fullPathFromRelativePath:' class_method='true'>
<arg name='relPath' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fullPathFromRelativePath:'>
<arg name='relPath' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fullPathFromRelativePath:resolutionType:' class_method='true'>
<arg name='relPath' declared_type='NSString*' type='@' index='0'/>
<arg name='resolutionType' declared_type='ccResolutionType*' type='^i' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fullPathFromRelativePath:resolutionType:'>
<arg name='relPath' declared_type='NSString*' type='@' index='0'/>
<arg name='resolutionType' declared_type='ccResolutionType*' type='^i' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='purgeCachedEntries'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBundle:'>
<arg name='bundle' declared_type='NSBundle*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFileManager:'>
<arg name='fileManager' declared_type='NSFileManager*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedFileUtils' class_method='true'>
<retval declared_type='CCFileUtils*' type='@'/>
</method>
</class>
<class name='CCFiniteTimeAction'>
<method selector='duration'>
<retval declared_type='ccTime' type='f'/>
</method>
<method selector='reverse'>
<retval declared_type='CCFiniteTimeAction*' type='@'/>
</method>
<method selector='setDuration:'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCFlipX'>
<method selector='actionWithFlipX:' class_method='true'>
<arg name='x' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFlipX:'>
<arg name='x' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCFlipX3D'>
<method selector='actionWithDuration:' class_method='true'>
<arg name='d' declared_type='ccTime' type='f' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:'>
<arg name='d' declared_type='ccTime' type='f' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCFlipY'>
<method selector='actionWithFlipY:' class_method='true'>
<arg name='y' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFlipY:'>
<arg name='y' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCFollow'>
<method selector='actionWithTarget:' class_method='true'>
<arg name='followedNode' declared_type='CCNode*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actionWithTarget:worldBoundary:' class_method='true'>
<arg name='followedNode' declared_type='CCNode*' type='@' index='0'/>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='boundarySet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithTarget:'>
<arg name='followedNode' declared_type='CCNode*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTarget:worldBoundary:'>
<arg name='followedNode' declared_type='CCNode*' type='@' index='0'/>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setBoundarySet:'>
<arg name='boundarySet' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCGLProgram'>
<method selector='addAttribute:index:'>
<arg name='attributeName' declared_type='NSString*' type='@' index='0'/>
<arg name='index' declared_type='GLuint' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fragmentShaderLog'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithVertexShaderByteArray:fragmentShaderByteArray:'>
<arg name='vShaderByteArray' declared_type='GLchar*' const='true' type='*' index='0'/>
<arg name='fShaderByteArray' declared_type='GLchar*' const='true' type='*' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithVertexShaderFilename:fragmentShaderFilename:'>
<arg name='vShaderFilename' declared_type='NSString*' type='@' index='0'/>
<arg name='fShaderFilename' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='link'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='programLog'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setUniformForModelViewProjectionMatrix'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:with2fv:count:'>
<arg name='location' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<arg name='floats' declared_type='GLfloat*' type='^f' index='1'/>
<arg name='numberOfArrays' declared_type='NSUInteger' type64='Q' type='I' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:with3fv:count:'>
<arg name='location' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<arg name='floats' declared_type='GLfloat*' type='^f' index='1'/>
<arg name='numberOfArrays' declared_type='NSUInteger' type64='Q' type='I' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:with4fv:count:'>
<arg name='location' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<arg name='floats' declared_type='GLvoid*' type='^v' index='1'/>
<arg name='numberOfArrays' declared_type='NSUInteger' type64='Q' type='I' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:withF1:'>
<arg name='location' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<arg name='f1' declared_type='GLfloat' type='f' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:withF1:f2:'>
<arg name='location' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<arg name='f1' declared_type='GLfloat' type='f' index='1'/>
<arg name='f2' declared_type='GLfloat' type='f' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:withF1:f2:f3:'>
<arg name='location' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<arg name='f1' declared_type='GLfloat' type='f' index='1'/>
<arg name='f2' declared_type='GLfloat' type='f' index='2'/>
<arg name='f3' declared_type='GLfloat' type='f' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:withF1:f2:f3:f4:'>
<arg name='location' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<arg name='f1' declared_type='GLfloat' type='f' index='1'/>
<arg name='f2' declared_type='GLfloat' type='f' index='2'/>
<arg name='f3' declared_type='GLfloat' type='f' index='3'/>
<arg name='f4' declared_type='GLfloat' type='f' index='4'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:withI1:'>
<arg name='location' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<arg name='i1' declared_type='GLint' type='i' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:withMatrix4fv:count:'>
<arg name='location' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<arg name='matrix_array' declared_type='GLvoid*' type='^v' index='1'/>
<arg name='numberOfMatrix' declared_type='NSUInteger' type64='Q' type='I' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateUniforms'>
<retval declared_type='void' type='v'/>
</method>
<method selector='use'>
<retval declared_type='void' type='v'/>
</method>
<method selector='vertexShaderLog'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='CCGLView'>
<method selector='depthFormat'>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='eventDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFrame:shareContext:'>
<arg name='frameRect' declared_type='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
<arg name='context' declared_type='NSOpenGLContext*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='load_' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method selector='lockOpenGLContext'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEventDelegate:'>
<arg name='eventDelegate' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unlockOpenGLContext'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCGrabber'>
<method selector='afterRender:'>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beforeRender:'>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='grab:'>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCGrid3D'>
<method selector='originalVertex:'>
<arg name='pos' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='ccVertex3F' type='{_ccVertex3F=fff}'/>
</method>
<method selector='setVertex:vertex:'>
<arg name='pos' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='0'/>
<arg name='vertex' declared_type='ccVertex3F' type='{_ccVertex3F=fff}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='vertex:'>
<arg name='pos' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='ccVertex3F' type='{_ccVertex3F=fff}'/>
</method>
</class>
<class name='CCGrid3DAction'>
<method selector='originalVertex:'>
<arg name='pos' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='ccVertex3F' type='{_ccVertex3F=fff}'/>
</method>
<method selector='setVertex:vertex:'>
<arg name='pos' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='0'/>
<arg name='vertex' declared_type='ccVertex3F' type='{_ccVertex3F=fff}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='vertex:'>
<arg name='pos' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='ccVertex3F' type='{_ccVertex3F=fff}'/>
</method>
</class>
<class name='CCGridAction'>
<method selector='actionWithSize:duration:' class_method='true'>
<arg name='size' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='0'/>
<arg name='d' declared_type='ccTime' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='grid'>
<retval declared_type='CCGridBase*' type='@'/>
</method>
<method selector='gridSize'>
<retval declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}'/>
</method>
<method selector='initWithSize:duration:'>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='0'/>
<arg name='d' declared_type='ccTime' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setGridSize:'>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCGridBase'>
<method selector='active'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='afterDraw:'>
<arg name='target' declared_type='CCNode*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beforeDraw'>
<retval declared_type='void' type='v'/>
</method>
<method selector='blit'>
<retval declared_type='void' type='v'/>
</method>
<method selector='calculateVertexPoints'>
<retval declared_type='void' type='v'/>
</method>
<method selector='grabber'>
<retval declared_type='CCGrabber*' type='@'/>
</method>
<method selector='gridSize'>
<retval declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}'/>
</method>
<method selector='gridWithSize:' class_method='true'>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='gridWithSize:texture:flippedTexture:' class_method='true'>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='0'/>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='1'/>
<arg name='flipped' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSize:'>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSize:texture:flippedTexture:'>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='0'/>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='1'/>
<arg name='flipped' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isTextureFlipped'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='reuse'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reuseGrid'>
<retval declared_type='int' type='i'/>
</method>
<method selector='setActive:'>
<arg name='active' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGrabber:'>
<arg name='grabber' declared_type='CCGrabber*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsTextureFlipped:'>
<arg name='isTextureFlipped' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReuseGrid:'>
<arg name='reuseGrid' declared_type='int' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShaderProgram:'>
<arg name='shaderProgram' declared_type='CCGLProgram*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStep:'>
<arg name='step' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:'>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shaderProgram'>
<retval declared_type='CCGLProgram*' type='@'/>
</method>
<method selector='step'>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='texture'>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
</class>
<class name='CCJumpBy'>
<method selector='actionWithDuration:position:height:jumps:' class_method='true'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='position' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='1'/>
<arg name='height' declared_type='ccTime' type='f' index='2'/>
<arg name='jumps' declared_type='NSUInteger' type64='Q' type='I' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:position:height:jumps:'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='position' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='1'/>
<arg name='height' declared_type='ccTime' type='f' index='2'/>
<arg name='jumps' declared_type='NSUInteger' type64='Q' type='I' index='3'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCJumpTiles3D'>
<method selector='actionWithJumps:amplitude:grid:duration:' class_method='true'>
<arg name='j' declared_type='int' type='i' index='0'/>
<arg name='amp' declared_type='float' type='f' index='1'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='2'/>
<arg name='d' declared_type='ccTime' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='amplitude'>
<retval declared_type='float' type='f'/>
</method>
<method selector='amplitudeRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithJumps:amplitude:grid:duration:'>
<arg name='j' declared_type='int' type='i' index='0'/>
<arg name='amp' declared_type='float' type='f' index='1'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='2'/>
<arg name='d' declared_type='ccTime' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAmplitude:'>
<arg name='amplitude' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAmplitudeRate:'>
<arg name='amplitudeRate' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCLabelAtlas'>
<method selector='initWithString:charMapFile:itemWidth:itemHeight:startCharMap:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='charmapfile' declared_type='NSString*' type='@' index='1'/>
<arg name='w' declared_type='NSUInteger' type64='Q' type='I' index='2'/>
<arg name='h' declared_type='NSUInteger' type64='Q' type='I' index='3'/>
<arg name='firstElement' declared_type='NSUInteger' type64='Q' type='I' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:fntFile:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='fontFile' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:charMapFile:itemWidth:itemHeight:startCharMap:' class_method='true'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='charmapfile' declared_type='NSString*' type='@' index='1'/>
<arg name='w' declared_type='NSUInteger' type64='Q' type='I' index='2'/>
<arg name='h' declared_type='NSUInteger' type64='Q' type='I' index='3'/>
<arg name='firstElement' declared_type='NSUInteger' type64='Q' type='I' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:fntFile:' class_method='true'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='fontFile' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCLabelBMFont'>
<method selector='alignment'>
<retval declared_type='CCTextAlignment' type='i'/>
</method>
<method selector='color'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='createFontChars'>
<retval declared_type='void' type='v'/>
</method>
<method selector='fntFile'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithString:fntFile:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='fntFile' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:fntFile:width:alignment:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='fntFile' declared_type='NSString*' type='@' index='1'/>
<arg name='width' declared_type='float' type='f' index='2'/>
<arg name='alignment' declared_type='CCTextAlignment' type='i' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:fntFile:width:alignment:imageOffset:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='fntFile' declared_type='NSString*' type='@' index='1'/>
<arg name='width' declared_type='float' type='f' index='2'/>
<arg name='alignment' declared_type='CCTextAlignment' type='i' index='3'/>
<arg name='offset' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:fntFile:' class_method='true'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='fntFile' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:fntFile:width:alignment:' class_method='true'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='fntFile' declared_type='NSString*' type='@' index='1'/>
<arg name='width' declared_type='float' type='f' index='2'/>
<arg name='alignment' declared_type='CCTextAlignment' type='i' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:fntFile:width:alignment:imageOffset:' class_method='true'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='fntFile' declared_type='NSString*' type='@' index='1'/>
<arg name='width' declared_type='float' type='f' index='2'/>
<arg name='alignment' declared_type='CCTextAlignment' type='i' index='3'/>
<arg name='offset' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='opacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='purgeCachedData' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlignment:'>
<arg name='alignment' declared_type='CCTextAlignment' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg name='color' declared_type='ccColor3B' type='{_ccColor3B=CCC}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFntFile:'>
<arg name='fntFile' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg name='opacity' declared_type='GLubyte' type='C' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:'>
<arg name='width' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCLabelTTF'>
<method selector='dimensions'>
<retval declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}'/>
</method>
<method selector='fontName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fontSize'>
<retval declared_type='float' type='f'/>
</method>
<method selector='horizontalAlignment'>
<retval declared_type='CCTextAlignment' type='i'/>
</method>
<method selector='initWithString:dimensions:alignment:fontName:fontSize:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='dimensions' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='1'/>
<arg name='alignment' declared_type='CCTextAlignment' type='i' index='2'/>
<arg name='name' declared_type='NSString*' type='@' index='3'/>
<arg name='size' declared_type='CGFloat' type64='d' type='f' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:dimensions:alignment:lineBreakMode:fontName:fontSize:'>
<arg name='str' declared_type='NSString*' type='@' index='0'/>
<arg name='dimensions' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='1'/>
<arg name='alignment' declared_type='CCTextAlignment' type='i' index='2'/>
<arg name='lineBreakMode' declared_type='CCLineBreakMode' type='i' index='3'/>
<arg name='name' declared_type='NSString*' type='@' index='4'/>
<arg name='size' declared_type='CGFloat' type64='d' type='f' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:dimensions:hAlignment:fontName:fontSize:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='dimensions' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='1'/>
<arg name='alignment' declared_type='CCTextAlignment' type='i' index='2'/>
<arg name='name' declared_type='NSString*' type='@' index='3'/>
<arg name='size' declared_type='CGFloat' type64='d' type='f' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:dimensions:hAlignment:lineBreakMode:fontName:fontSize:'>
<arg name='str' declared_type='NSString*' type='@' index='0'/>
<arg name='dimensions' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='1'/>
<arg name='alignment' declared_type='CCTextAlignment' type='i' index='2'/>
<arg name='lineBreakMode' declared_type='CCLineBreakMode' type='i' index='3'/>
<arg name='name' declared_type='NSString*' type='@' index='4'/>
<arg name='size' declared_type='CGFloat' type64='d' type='f' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:dimensions:hAlignment:vAlignment:fontName:fontSize:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='dimensions' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='1'/>
<arg name='alignment' declared_type='CCTextAlignment' type='i' index='2'/>
<arg name='vertAlignment' declared_type='CCVerticalTextAlignment' type='i' index='3'/>
<arg name='name' declared_type='NSString*' type='@' index='4'/>
<arg name='size' declared_type='CGFloat' type64='d' type='f' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:dimensions:hAlignment:vAlignment:lineBreakMode:fontName:fontSize:'>
<arg name='str' declared_type='NSString*' type='@' index='0'/>
<arg name='dimensions' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='1'/>
<arg name='alignment' declared_type='CCTextAlignment' type='i' index='2'/>
<arg name='vAlignment' declared_type='CCVerticalTextAlignment' type='i' index='3'/>
<arg name='lineBreakMode' declared_type='CCLineBreakMode' type='i' index='4'/>
<arg name='name' declared_type='NSString*' type='@' index='5'/>
<arg name='size' declared_type='CGFloat' type64='d' type='f' index='6'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:fontName:fontSize:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='name' declared_type='NSString*' type='@' index='1'/>
<arg name='size' declared_type='CGFloat' type64='d' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:dimensions:alignment:fontName:fontSize:' class_method='true'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='dimensions' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='1'/>
<arg name='alignment' declared_type='CCTextAlignment' type='i' index='2'/>
<arg name='name' declared_type='NSString*' type='@' index='3'/>
<arg name='size' declared_type='CGFloat' type64='d' type='f' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:dimensions:alignment:lineBreakMode:fontName:fontSize:' class_method='true'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='dimensions' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='1'/>
<arg name='alignment' declared_type='CCTextAlignment' type='i' index='2'/>
<arg name='lineBreakMode' declared_type='CCLineBreakMode' type='i' index='3'/>
<arg name='name' declared_type='NSString*' type='@' index='4'/>
<arg name='size' declared_type='CGFloat' type64='d' type='f' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:dimensions:hAlignment:fontName:fontSize:' class_method='true'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='dimensions' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='1'/>
<arg name='alignment' declared_type='CCTextAlignment' type='i' index='2'/>
<arg name='name' declared_type='NSString*' type='@' index='3'/>
<arg name='size' declared_type='CGFloat' type64='d' type='f' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:dimensions:hAlignment:lineBreakMode:fontName:fontSize:' class_method='true'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='dimensions' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='1'/>
<arg name='alignment' declared_type='CCTextAlignment' type='i' index='2'/>
<arg name='lineBreakMode' declared_type='CCLineBreakMode' type='i' index='3'/>
<arg name='name' declared_type='NSString*' type='@' index='4'/>
<arg name='size' declared_type='CGFloat' type64='d' type='f' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:dimensions:hAlignment:vAlignment:fontName:fontSize:' class_method='true'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='dimensions' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='1'/>
<arg name='alignment' declared_type='CCTextAlignment' type='i' index='2'/>
<arg name='vertAlignment' declared_type='CCVerticalTextAlignment' type='i' index='3'/>
<arg name='name' declared_type='NSString*' type='@' index='4'/>
<arg name='size' declared_type='CGFloat' type64='d' type='f' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:dimensions:hAlignment:vAlignment:lineBreakMode:fontName:fontSize:' class_method='true'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='dimensions' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='1'/>
<arg name='alignment' declared_type='CCTextAlignment' type='i' index='2'/>
<arg name='vertAlignment' declared_type='CCVerticalTextAlignment' type='i' index='3'/>
<arg name='lineBreakMode' declared_type='CCLineBreakMode' type='i' index='4'/>
<arg name='name' declared_type='NSString*' type='@' index='5'/>
<arg name='size' declared_type='CGFloat' type64='d' type='f' index='6'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:fontName:fontSize:' class_method='true'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='name' declared_type='NSString*' type='@' index='1'/>
<arg name='size' declared_type='CGFloat' type64='d' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDimensions:'>
<arg name='dimensions' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFontName:'>
<arg name='fontName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFontSize:'>
<arg name='fontSize' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHorizontalAlignment:'>
<arg name='horizontalAlignment' declared_type='CCTextAlignment' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setString:'>
<arg name='str' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVerticalAlignment:'>
<arg name='verticalAlignment' declared_type='CCVerticalTextAlignment' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='verticalAlignment'>
<retval declared_type='CCVerticalTextAlignment' type='i'/>
</method>
</class>
<class name='CCLayer'>
<method selector='isKeyboardEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isMouseEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTouchEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyboardDelegatePriority'>
<retval declared_type='NSInteger' type64='q' type='i'/>
</method>
<method selector='mouseDelegatePriority'>
<retval declared_type='NSInteger' type64='q' type='i'/>
</method>
<method selector='setIsKeyboardEnabled:'>
<arg name='isKeyboardEnabled' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsMouseEnabled:'>
<arg name='isMouseEnabled' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsTouchEnabled:'>
<arg name='isTouchEnabled' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchDelegatePriority'>
<retval declared_type='NSInteger' type64='q' type='i'/>
</method>
</class>
<class name='CCLayerColor'>
<method selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='changeHeight:'>
<arg name='h' declared_type='GLfloat' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='changeWidth:'>
<arg name='w' declared_type='GLfloat' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='changeWidth:height:'>
<arg name='w' declared_type='GLfloat' type='f' index='0'/>
<arg name='h' declared_type='GLfloat' type='f' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='color'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='initWithColor:'>
<arg name='color' declared_type='ccColor4B' type='{_ccColor4B=CCCC}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithColor:width:height:'>
<arg name='color' declared_type='ccColor4B' type='{_ccColor4B=CCCC}' index='0'/>
<arg name='w' declared_type='GLfloat' type='f' index='1'/>
<arg name='h' declared_type='GLfloat' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layerWithColor:' class_method='true'>
<arg name='color' declared_type='ccColor4B' type='{_ccColor4B=CCCC}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layerWithColor:width:height:' class_method='true'>
<arg name='color' declared_type='ccColor4B' type='{_ccColor4B=CCCC}' index='0'/>
<arg name='w' declared_type='GLfloat' type='f' index='1'/>
<arg name='h' declared_type='GLfloat' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='opacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='setBlendFunc:'>
<arg name='blendFunc' declared_type='ccBlendFunc' type='{_ccBlendFunc=II}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCLayerGradient'>
<method selector='compressedInterpolation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='endColor'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='endOpacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='initWithColor:fadingTo:'>
<arg name='start' declared_type='ccColor4B' type='{_ccColor4B=CCCC}' index='0'/>
<arg name='end' declared_type='ccColor4B' type='{_ccColor4B=CCCC}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithColor:fadingTo:alongVector:'>
<arg name='start' declared_type='ccColor4B' type='{_ccColor4B=CCCC}' index='0'/>
<arg name='end' declared_type='ccColor4B' type='{_ccColor4B=CCCC}' index='1'/>
<arg name='v' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layerWithColor:fadingTo:' class_method='true'>
<arg name='start' declared_type='ccColor4B' type='{_ccColor4B=CCCC}' index='0'/>
<arg name='end' declared_type='ccColor4B' type='{_ccColor4B=CCCC}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layerWithColor:fadingTo:alongVector:' class_method='true'>
<arg name='start' declared_type='ccColor4B' type='{_ccColor4B=CCCC}' index='0'/>
<arg name='end' declared_type='ccColor4B' type='{_ccColor4B=CCCC}' index='1'/>
<arg name='v' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setCompressedInterpolation:'>
<arg name='compressedInterpolation' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndColor:'>
<arg name='endColor' declared_type='ccColor3B' type='{_ccColor3B=CCC}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndOpacity:'>
<arg name='endOpacity' declared_type='GLubyte' type='C' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartColor:'>
<arg name='startColor' declared_type='ccColor3B' type='{_ccColor3B=CCC}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartOpacity:'>
<arg name='startOpacity' declared_type='GLubyte' type='C' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVector:'>
<arg name='vector' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startColor'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='startOpacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='vector'>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
</class>
<class name='CCLayerMultiplex'>
<method selector='initWithLayers:vaList:'>
<arg name='layer' declared_type='CCLayer*' type='@' index='0'/>
<arg name='params' declared_type='va_list' type64='^{__va_list_tag=II^v^v}' type='*' index='1' declared_type64='__va_list_tag*'/>
<retval declared_type='id' type='@'/>
</method>
<method variadic='true' sentinel='0' selector='layerWithLayers:' class_method='true'>
<arg name='layer' declared_type='CCLayer*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='switchTo:'>
<arg name='n' declared_type='unsigned int' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='switchToAndReleaseMe:'>
<arg name='n' declared_type='unsigned int' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCLens3D'>
<method selector='actionWithPosition:radius:grid:duration:' class_method='true'>
<arg name='pos' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<arg name='r' declared_type='float' type='f' index='1'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='2'/>
<arg name='d' declared_type='ccTime' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPosition:radius:grid:duration:'>
<arg name='pos' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<arg name='r' declared_type='float' type='f' index='1'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='2'/>
<arg name='d' declared_type='ccTime' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='lensEffect'>
<retval declared_type='float' type='f'/>
</method>
<method selector='position'>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='setLensEffect:'>
<arg name='lensEffect' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:'>
<arg name='position' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCLiquid'>
<method selector='actionWithWaves:amplitude:grid:duration:' class_method='true'>
<arg name='wav' declared_type='int' type='i' index='0'/>
<arg name='amp' declared_type='float' type='f' index='1'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='2'/>
<arg name='d' declared_type='ccTime' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='amplitude'>
<retval declared_type='float' type='f'/>
</method>
<method selector='amplitudeRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithWaves:amplitude:grid:duration:'>
<arg name='wav' declared_type='int' type='i' index='0'/>
<arg name='amp' declared_type='float' type='f' index='1'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='2'/>
<arg name='d' declared_type='ccTime' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAmplitude:'>
<arg name='amplitude' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAmplitudeRate:'>
<arg name='amplitudeRate' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCMenu'>
<method selector='alignItemsHorizontally'>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignItemsHorizontallyWithPadding:'>
<arg name='padding' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method variadic='true' sentinel='0' selector='alignItemsInColumns:'>
<arg name='columns' declared_type='NSNumber*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignItemsInColumns:vaList:'>
<arg name='columns' declared_type='NSNumber*' type='@' index='0'/>
<arg name='args' declared_type='va_list' type64='^{__va_list_tag=II^v^v}' type='*' index='1' declared_type64='__va_list_tag*'/>
<retval declared_type='void' type='v'/>
</method>
<method variadic='true' sentinel='0' selector='alignItemsInRows:'>
<arg name='rows' declared_type='NSNumber*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignItemsInRows:vaList:'>
<arg name='rows' declared_type='NSNumber*' type='@' index='0'/>
<arg name='args' declared_type='va_list' type64='^{__va_list_tag=II^v^v}' type='*' index='1' declared_type64='__va_list_tag*'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignItemsVertically'>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignItemsVerticallyWithPadding:'>
<arg name='padding' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='color'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='enabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithArray:'>
<arg name='arrayOfItems' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithItems:vaList:'>
<arg name='item' declared_type='CCMenuItem*' type='@' index='0'/>
<arg name='args' declared_type='va_list' type64='^{__va_list_tag=II^v^v}' type='*' index='1' declared_type64='__va_list_tag*'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='menuWithArray:' class_method='true'>
<arg name='arrayOfItems' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method variadic='true' sentinel='0' selector='menuWithItems:' class_method='true'>
<arg name='item' declared_type='CCMenuItem*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='opacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='setEnabled:'>
<arg name='enabled' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHandlerPriority:'>
<arg name='newPriority' declared_type='NSInteger' type64='q' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCMenuItem'>
<method selector='activate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='cleanup'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBlock:'>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='0'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTarget:selector:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<arg name='selector' declared_type='SEL' type=':' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSelected'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='itemWithBlock:' class_method='true'>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='0'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithTarget:selector:' class_method='true'>
<arg name='target' declared_type='id' type='@' index='0'/>
<arg name='selector' declared_type='SEL' type=':' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='rect'>
<retval declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='selected'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlock:'>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='0'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsEnabled:'>
<arg name='enabled' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:selector:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<arg name='selector' declared_type='SEL' type=':' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unselected'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCMenuItemAtlasFont'>
<method selector='initFromString:charMapFile:itemWidth:itemHeight:startCharMap:block:'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='charMapFile' declared_type='NSString*' type='@' index='1'/>
<arg name='itemWidth' declared_type='int' type='i' index='2'/>
<arg name='itemHeight' declared_type='int' type='i' index='3'/>
<arg name='startCharMap' declared_type='char' type='c' index='4'/>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='5'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initFromString:charMapFile:itemWidth:itemHeight:startCharMap:target:selector:'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='charMapFile' declared_type='NSString*' type='@' index='1'/>
<arg name='itemWidth' declared_type='int' type='i' index='2'/>
<arg name='itemHeight' declared_type='int' type='i' index='3'/>
<arg name='startCharMap' declared_type='char' type='c' index='4'/>
<arg name='rec' declared_type='id' type='@' index='5'/>
<arg name='cb' declared_type='SEL' type=':' index='6'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:charMapFile:itemWidth:itemHeight:startCharMap:block:'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='charMapFile' declared_type='NSString*' type='@' index='1'/>
<arg name='itemWidth' declared_type='int' type='i' index='2'/>
<arg name='itemHeight' declared_type='int' type='i' index='3'/>
<arg name='startCharMap' declared_type='char' type='c' index='4'/>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='5'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:charMapFile:itemWidth:itemHeight:startCharMap:target:selector:'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='charMapFile' declared_type='NSString*' type='@' index='1'/>
<arg name='itemWidth' declared_type='int' type='i' index='2'/>
<arg name='itemHeight' declared_type='int' type='i' index='3'/>
<arg name='startCharMap' declared_type='char' type='c' index='4'/>
<arg name='target' declared_type='id' type='@' index='5'/>
<arg name='selector' declared_type='SEL' type=':' index='6'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemFromString:charMapFile:itemWidth:itemHeight:startCharMap:' class_method='true'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='charMapFile' declared_type='NSString*' type='@' index='1'/>
<arg name='itemWidth' declared_type='int' type='i' index='2'/>
<arg name='itemHeight' declared_type='int' type='i' index='3'/>
<arg name='startCharMap' declared_type='char' type='c' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemFromString:charMapFile:itemWidth:itemHeight:startCharMap:block:' class_method='true'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='charMapFile' declared_type='NSString*' type='@' index='1'/>
<arg name='itemWidth' declared_type='int' type='i' index='2'/>
<arg name='itemHeight' declared_type='int' type='i' index='3'/>
<arg name='startCharMap' declared_type='char' type='c' index='4'/>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='5'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemFromString:charMapFile:itemWidth:itemHeight:startCharMap:target:selector:' class_method='true'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='charMapFile' declared_type='NSString*' type='@' index='1'/>
<arg name='itemWidth' declared_type='int' type='i' index='2'/>
<arg name='itemHeight' declared_type='int' type='i' index='3'/>
<arg name='startCharMap' declared_type='char' type='c' index='4'/>
<arg name='rec' declared_type='id' type='@' index='5'/>
<arg name='cb' declared_type='SEL' type=':' index='6'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithString:charMapFile:itemWidth:itemHeight:startCharMap:' class_method='true'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='charMapFile' declared_type='NSString*' type='@' index='1'/>
<arg name='itemWidth' declared_type='int' type='i' index='2'/>
<arg name='itemHeight' declared_type='int' type='i' index='3'/>
<arg name='startCharMap' declared_type='char' type='c' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithString:charMapFile:itemWidth:itemHeight:startCharMap:block:' class_method='true'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='charMapFile' declared_type='NSString*' type='@' index='1'/>
<arg name='itemWidth' declared_type='int' type='i' index='2'/>
<arg name='itemHeight' declared_type='int' type='i' index='3'/>
<arg name='startCharMap' declared_type='char' type='c' index='4'/>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='5'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithString:charMapFile:itemWidth:itemHeight:startCharMap:target:selector:' class_method='true'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='charMapFile' declared_type='NSString*' type='@' index='1'/>
<arg name='itemWidth' declared_type='int' type='i' index='2'/>
<arg name='itemHeight' declared_type='int' type='i' index='3'/>
<arg name='startCharMap' declared_type='char' type='c' index='4'/>
<arg name='target' declared_type='id' type='@' index='5'/>
<arg name='selector' declared_type='SEL' type=':' index='6'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCMenuItemFont'>
<method selector='fontName' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fontName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fontSize' class_method='true'>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='fontSize'>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='initFromString:block:'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='1'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initFromString:target:selector:'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='r' declared_type='id' type='@' index='1'/>
<arg name='s' declared_type='SEL' type=':' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:block:'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='1'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:target:selector:'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='r' declared_type='id' type='@' index='1'/>
<arg name='s' declared_type='SEL' type=':' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemFromString:' class_method='true'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemFromString:block:' class_method='true'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='1'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemFromString:target:selector:' class_method='true'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='r' declared_type='id' type='@' index='1'/>
<arg name='s' declared_type='SEL' type=':' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithString:' class_method='true'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithString:block:' class_method='true'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='1'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithString:target:selector:' class_method='true'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='r' declared_type='id' type='@' index='1'/>
<arg name='s' declared_type='SEL' type=':' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setFontName:' class_method='true'>
<arg name='n' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFontName:'>
<arg name='n' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFontSize:' class_method='true'>
<arg name='s' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFontSize:'>
<arg name='s' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCMenuItemImage'>
<method selector='initFromNormalImage:selectedImage:disabledImage:block:'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='value2' declared_type='NSString*' type='@' index='1'/>
<arg name='value3' declared_type='NSString*' type='@' index='2'/>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='3'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initFromNormalImage:selectedImage:disabledImage:target:selector:'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='value2' declared_type='NSString*' type='@' index='1'/>
<arg name='value3' declared_type='NSString*' type='@' index='2'/>
<arg name='r' declared_type='id' type='@' index='3'/>
<arg name='s' declared_type='SEL' type=':' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithNormalImage:selectedImage:disabledImage:block:'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='value2' declared_type='NSString*' type='@' index='1'/>
<arg name='value3' declared_type='NSString*' type='@' index='2'/>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='3'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithNormalImage:selectedImage:disabledImage:target:selector:'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='value2' declared_type='NSString*' type='@' index='1'/>
<arg name='value3' declared_type='NSString*' type='@' index='2'/>
<arg name='r' declared_type='id' type='@' index='3'/>
<arg name='s' declared_type='SEL' type=':' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemFromNormalImage:selectedImage:' class_method='true'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='value2' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemFromNormalImage:selectedImage:block:' class_method='true'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='value2' declared_type='NSString*' type='@' index='1'/>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='2'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemFromNormalImage:selectedImage:disabledImage:block:' class_method='true'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='value2' declared_type='NSString*' type='@' index='1'/>
<arg name='value3' declared_type='NSString*' type='@' index='2'/>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='3'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemFromNormalImage:selectedImage:disabledImage:target:selector:' class_method='true'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='value2' declared_type='NSString*' type='@' index='1'/>
<arg name='value3' declared_type='NSString*' type='@' index='2'/>
<arg name='r' declared_type='id' type='@' index='3'/>
<arg name='s' declared_type='SEL' type=':' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemFromNormalImage:selectedImage:target:selector:' class_method='true'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='value2' declared_type='NSString*' type='@' index='1'/>
<arg name='r' declared_type='id' type='@' index='2'/>
<arg name='s' declared_type='SEL' type=':' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalImage:selectedImage:' class_method='true'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='value2' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalImage:selectedImage:block:' class_method='true'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='value2' declared_type='NSString*' type='@' index='1'/>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='2'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalImage:selectedImage:disabledImage:block:' class_method='true'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='value2' declared_type='NSString*' type='@' index='1'/>
<arg name='value3' declared_type='NSString*' type='@' index='2'/>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='3'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalImage:selectedImage:disabledImage:target:selector:' class_method='true'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='value2' declared_type='NSString*' type='@' index='1'/>
<arg name='value3' declared_type='NSString*' type='@' index='2'/>
<arg name='r' declared_type='id' type='@' index='3'/>
<arg name='s' declared_type='SEL' type=':' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalImage:selectedImage:target:selector:' class_method='true'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='value2' declared_type='NSString*' type='@' index='1'/>
<arg name='r' declared_type='id' type='@' index='2'/>
<arg name='s' declared_type='SEL' type=':' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDisabledSpriteFrame:'>
<arg name='frame' declared_type='CCSpriteFrame*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNormalSpriteFrame:'>
<arg name='frame' declared_type='CCSpriteFrame*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedSpriteFrame:'>
<arg name='frame' declared_type='CCSpriteFrame*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCMenuItemLabel'>
<method selector='disabledColor'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='initWithLabel:block:'>
<arg name='label' declared_type='CCNode*' type='@' index='0'/>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='1'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithLabel:target:selector:'>
<arg name='label' declared_type='CCNode*' type='@' index='0'/>
<arg name='target' declared_type='id' type='@' index='1'/>
<arg name='selector' declared_type='SEL' type=':' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithLabel:' class_method='true'>
<arg name='label' declared_type='CCNode*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithLabel:block:' class_method='true'>
<arg name='label' declared_type='CCNode*' type='@' index='0'/>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='1'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithLabel:target:selector:' class_method='true'>
<arg name='label' declared_type='CCNode*' type='@' index='0'/>
<arg name='target' declared_type='id' type='@' index='1'/>
<arg name='selector' declared_type='SEL' type=':' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='label'>
<retval declared_type='CCNode*' type='@'/>
</method>
<method selector='setDisabledColor:'>
<arg name='disabledColor' declared_type='ccColor3B' type='{_ccColor3B=CCC}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsEnabled:'>
<arg name='enabled' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabel:'>
<arg name='label' declared_type='CCNode*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setString:'>
<arg name='label' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCMenuItemSprite'>
<method selector='disabledImage'>
<retval declared_type='CCNode*' type='@'/>
</method>
<method selector='initFromNormalSprite:selectedSprite:disabledSprite:block:'>
<arg name='normalSprite' declared_type='CCNode*' type='@' index='0'/>
<arg name='selectedSprite' declared_type='CCNode*' type='@' index='1'/>
<arg name='disabledSprite' declared_type='CCNode*' type='@' index='2'/>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='3'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initFromNormalSprite:selectedSprite:disabledSprite:target:selector:'>
<arg name='normalSprite' declared_type='CCNode*' type='@' index='0'/>
<arg name='selectedSprite' declared_type='CCNode*' type='@' index='1'/>
<arg name='disabledSprite' declared_type='CCNode*' type='@' index='2'/>
<arg name='target' declared_type='id' type='@' index='3'/>
<arg name='selector' declared_type='SEL' type=':' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithNormalSprite:selectedSprite:disabledSprite:block:'>
<arg name='normalSprite' declared_type='CCNode*' type='@' index='0'/>
<arg name='selectedSprite' declared_type='CCNode*' type='@' index='1'/>
<arg name='disabledSprite' declared_type='CCNode*' type='@' index='2'/>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='3'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithNormalSprite:selectedSprite:disabledSprite:target:selector:'>
<arg name='normalSprite' declared_type='CCNode*' type='@' index='0'/>
<arg name='selectedSprite' declared_type='CCNode*' type='@' index='1'/>
<arg name='disabledSprite' declared_type='CCNode*' type='@' index='2'/>
<arg name='target' declared_type='id' type='@' index='3'/>
<arg name='selector' declared_type='SEL' type=':' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemFromNormalSprite:selectedSprite:' class_method='true'>
<arg name='normalSprite' declared_type='CCNode*' type='@' index='0'/>
<arg name='selectedSprite' declared_type='CCNode*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemFromNormalSprite:selectedSprite:block:' class_method='true'>
<arg name='normalSprite' declared_type='CCNode*' type='@' index='0'/>
<arg name='selectedSprite' declared_type='CCNode*' type='@' index='1'/>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='2'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemFromNormalSprite:selectedSprite:disabledSprite:block:' class_method='true'>
<arg name='normalSprite' declared_type='CCNode*' type='@' index='0'/>
<arg name='selectedSprite' declared_type='CCNode*' type='@' index='1'/>
<arg name='disabledSprite' declared_type='CCNode*' type='@' index='2'/>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='3'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemFromNormalSprite:selectedSprite:disabledSprite:target:selector:' class_method='true'>
<arg name='normalSprite' declared_type='CCNode*' type='@' index='0'/>
<arg name='selectedSprite' declared_type='CCNode*' type='@' index='1'/>
<arg name='disabledSprite' declared_type='CCNode*' type='@' index='2'/>
<arg name='target' declared_type='id' type='@' index='3'/>
<arg name='selector' declared_type='SEL' type=':' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemFromNormalSprite:selectedSprite:target:selector:' class_method='true'>
<arg name='normalSprite' declared_type='CCNode*' type='@' index='0'/>
<arg name='selectedSprite' declared_type='CCNode*' type='@' index='1'/>
<arg name='target' declared_type='id' type='@' index='2'/>
<arg name='selector' declared_type='SEL' type=':' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalSprite:selectedSprite:' class_method='true'>
<arg name='normalSprite' declared_type='CCNode*' type='@' index='0'/>
<arg name='selectedSprite' declared_type='CCNode*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalSprite:selectedSprite:block:' class_method='true'>
<arg name='normalSprite' declared_type='CCNode*' type='@' index='0'/>
<arg name='selectedSprite' declared_type='CCNode*' type='@' index='1'/>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='2'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalSprite:selectedSprite:disabledSprite:block:' class_method='true'>
<arg name='normalSprite' declared_type='CCNode*' type='@' index='0'/>
<arg name='selectedSprite' declared_type='CCNode*' type='@' index='1'/>
<arg name='disabledSprite' declared_type='CCNode*' type='@' index='2'/>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='3'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalSprite:selectedSprite:disabledSprite:target:selector:' class_method='true'>
<arg name='normalSprite' declared_type='CCNode*' type='@' index='0'/>
<arg name='selectedSprite' declared_type='CCNode*' type='@' index='1'/>
<arg name='disabledSprite' declared_type='CCNode*' type='@' index='2'/>
<arg name='target' declared_type='id' type='@' index='3'/>
<arg name='selector' declared_type='SEL' type=':' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalSprite:selectedSprite:target:selector:' class_method='true'>
<arg name='normalSprite' declared_type='CCNode*' type='@' index='0'/>
<arg name='selectedSprite' declared_type='CCNode*' type='@' index='1'/>
<arg name='target' declared_type='id' type='@' index='2'/>
<arg name='selector' declared_type='SEL' type=':' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='normalImage'>
<retval declared_type='CCNode*' type='@'/>
</method>
<method selector='selectedImage'>
<retval declared_type='CCNode*' type='@'/>
</method>
<method selector='setDisabledImage:'>
<arg name='disabledImage' declared_type='CCNode*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNormalImage:'>
<arg name='normalImage' declared_type='CCNode*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedImage:'>
<arg name='selectedImage' declared_type='CCNode*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCMenuItemToggle'>
<method selector='color'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='initWithItems:block:'>
<arg name='arrayOfItems' declared_type='NSArray*' type='@' index='0'/>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='1'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTarget:selector:items:vaList:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<arg name='selector' declared_type='SEL' type=':' index='1'/>
<arg name='item' declared_type='CCMenuItem*' type='@' index='2'/>
<arg name='args' declared_type='va_list' type64='^{__va_list_tag=II^v^v}' type='*' index='3' declared_type64='__va_list_tag*'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithItems:block:' class_method='true'>
<arg name='arrayOfItems' declared_type='NSArray*' type='@' index='0'/>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='1'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method variadic='true' sentinel='0' selector='itemWithTarget:selector:items:' class_method='true'>
<arg name='target' declared_type='id' type='@' index='0'/>
<arg name='selector' declared_type='SEL' type=':' index='1'/>
<arg name='item' declared_type='CCMenuItem*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='opacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='selectedIndex'>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='selectedItem'>
<retval declared_type='CCMenuItem*' type='@'/>
</method>
<method selector='setSelectedIndex:'>
<arg name='selectedIndex' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubItems:'>
<arg name='subItems' declared_type='NSMutableArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subItems'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
</class>
<class name='CCMotionStreak'>
<method selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='initWithFade:minSeg:width:color:texture:'>
<arg name='fade' declared_type='float' type='f' index='0'/>
<arg name='minSeg' declared_type='float' type='f' index='1'/>
<arg name='stroke' declared_type='float' type='f' index='2'/>
<arg name='color' declared_type='ccColor3B' type='{_ccColor3B=CCC}' index='3'/>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFade:minSeg:width:color:textureFilename:'>
<arg name='fade' declared_type='float' type='f' index='0'/>
<arg name='minSeg' declared_type='float' type='f' index='1'/>
<arg name='stroke' declared_type='float' type='f' index='2'/>
<arg name='color' declared_type='ccColor3B' type='{_ccColor3B=CCC}' index='3'/>
<arg name='path' declared_type='NSString*' type='@' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isFastMode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendFunc:'>
<arg name='blendFunc' declared_type='ccBlendFunc' type='{_ccBlendFunc=II}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFastMode:'>
<arg name='fastMode' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:'>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='streakWithFade:minSeg:width:color:texture:' class_method='true'>
<arg name='fade' declared_type='float' type='f' index='0'/>
<arg name='minSeg' declared_type='float' type='f' index='1'/>
<arg name='stroke' declared_type='float' type='f' index='2'/>
<arg name='color' declared_type='ccColor3B' type='{_ccColor3B=CCC}' index='3'/>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='streakWithFade:minSeg:width:color:textureFilename:' class_method='true'>
<arg name='fade' declared_type='float' type='f' index='0'/>
<arg name='minSeg' declared_type='float' type='f' index='1'/>
<arg name='stroke' declared_type='float' type='f' index='2'/>
<arg name='color' declared_type='ccColor3B' type='{_ccColor3B=CCC}' index='3'/>
<arg name='path' declared_type='NSString*' type='@' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='texture'>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
<method selector='tintWithColor:'>
<arg name='colors' declared_type='ccColor3B' type='{_ccColor3B=CCC}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCMoveBy'>
<method selector='actionWithDuration:position:' class_method='true'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='deltaPosition' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:position:'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='deltaPosition' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCMoveTo'>
<method selector='actionWithDuration:position:' class_method='true'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='position' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:position:'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='position' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCNode'>
<method selector='actionManager'>
<retval declared_type='CCActionManager*' type='@'/>
</method>
<method selector='addChild:'>
<arg name='node' declared_type='CCNode*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addChild:z:'>
<arg name='node' declared_type='CCNode*' type='@' index='0'/>
<arg name='z' declared_type='NSInteger' type64='q' type='i' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addChild:z:tag:'>
<arg name='node' declared_type='CCNode*' type='@' index='0'/>
<arg name='z' declared_type='NSInteger' type64='q' type='i' index='1'/>
<arg name='tag' declared_type='NSInteger' type64='q' type='i' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='anchorPoint'>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='anchorPointInPoints'>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='boundingBox'>
<retval declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='camera'>
<retval declared_type='CCCamera*' type='@'/>
</method>
<method selector='children'>
<retval declared_type='CCArray*' type='@'/>
</method>
<method selector='cleanup'>
<retval declared_type='void' type='v'/>
</method>
<method selector='contentSize'>
<retval declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}'/>
</method>
<method selector='convertToNodeSpace:'>
<arg name='worldPoint' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='convertToNodeSpaceAR:'>
<arg name='worldPoint' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='convertToWorldSpace:'>
<arg name='nodePoint' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='convertToWorldSpaceAR:'>
<arg name='nodePoint' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='draw'>
<retval declared_type='void' type='v'/>
</method>
<method selector='getActionByTag:'>
<arg name='tag' declared_type='NSInteger' type64='q' type='i' index='0'/>
<retval declared_type='CCAction*' type='@'/>
</method>
<method selector='getChildByTag:'>
<arg name='tag' declared_type='NSInteger' type64='q' type='i' index='0'/>
<retval declared_type='CCNode*' type='@'/>
</method>
<method selector='glServerState'>
<retval declared_type='ccGLServerState' type='i'/>
</method>
<method selector='grid'>
<retval declared_type='CCGridBase*' type='@'/>
</method>
<method selector='ignoreAnchorPointForPosition'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isRelativeAnchorPoint'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRunning'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='node' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='nodeToParentTransform'>
<retval declared_type='CGAffineTransform' type64='{CGAffineTransform=dddddd}' type='{CGAffineTransform=ffffff}'/>
</method>
<method selector='nodeToWorldTransform'>
<retval declared_type='CGAffineTransform' type64='{CGAffineTransform=dddddd}' type='{CGAffineTransform=ffffff}'/>
</method>
<method selector='numberOfRunningActions'>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='onEnter'>
<retval declared_type='void' type='v'/>
</method>
<method selector='onEnterTransitionDidFinish'>
<retval declared_type='void' type='v'/>
</method>
<method selector='onExit'>
<retval declared_type='void' type='v'/>
</method>
<method selector='onExitTransitionDidStart'>
<retval declared_type='void' type='v'/>
</method>
<method selector='orderOfArrival'>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='parent'>
<retval declared_type='CCNode*' type='@'/>
</method>
<method selector='parentToNodeTransform'>
<retval declared_type='CGAffineTransform' type64='{CGAffineTransform=dddddd}' type='{CGAffineTransform=ffffff}'/>
</method>
<method selector='pauseSchedulerAndActions'>
<retval declared_type='void' type='v'/>
</method>
<method selector='position'>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='removeAllChildrenWithCleanup:'>
<arg name='cleanup' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeChild:cleanup:'>
<arg name='node' declared_type='CCNode*' type='@' index='0'/>
<arg name='cleanup' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeChildByTag:cleanup:'>
<arg name='tag' declared_type='NSInteger' type64='q' type='i' index='0'/>
<arg name='cleanup' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeFromParentAndCleanup:'>
<arg name='cleanup' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reorderChild:z:'>
<arg name='child' declared_type='CCNode*' type='@' index='0'/>
<arg name='zOrder' declared_type='NSInteger' type64='q' type='i' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resumeSchedulerAndActions'>
<retval declared_type='void' type='v'/>
</method>
<method selector='rotation'>
<retval declared_type='float' type='f'/>
</method>
<method selector='runAction:'>
<arg name='action' declared_type='CCAction*' type='@' index='0'/>
<retval declared_type='CCAction*' type='@'/>
</method>
<method selector='scale'>
<retval declared_type='float' type='f'/>
</method>
<method selector='scaleX'>
<retval declared_type='float' type='f'/>
</method>
<method selector='scaleY'>
<retval declared_type='float' type='f'/>
</method>
<method selector='schedule:'>
<arg name='s' declared_type='SEL' type=':' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='schedule:interval:'>
<arg name='s' declared_type='SEL' type=':' index='0'/>
<arg name='seconds' declared_type='ccTime' type='f' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='schedule:interval:repeat:delay:'>
<arg name='selector' declared_type='SEL' type=':' index='0'/>
<arg name='interval' declared_type='ccTime' type='f' index='1'/>
<arg name='repeat' declared_type='uint' type='I' index='2'/>
<arg name='delay' declared_type='ccTime' type='f' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleOnce:delay:'>
<arg name='selector' declared_type='SEL' type=':' index='0'/>
<arg name='delay' declared_type='ccTime' type='f' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleUpdate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleUpdateWithPriority:'>
<arg name='priority' declared_type='NSInteger' type64='q' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduler'>
<retval declared_type='CCScheduler*' type='@'/>
</method>
<method selector='setActionManager:'>
<arg name='actionManager' declared_type='CCActionManager*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnchorPoint:'>
<arg name='anchorPoint' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentSize:'>
<arg name='contentSize' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGlServerState:'>
<arg name='glServerState' declared_type='ccGLServerState' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGrid:'>
<arg name='grid' declared_type='CCGridBase*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIgnoreAnchorPointForPosition:'>
<arg name='ignoreAnchorPointForPosition' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsRelativeAnchorPoint:'>
<arg name='value' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrderOfArrival:'>
<arg name='orderOfArrival' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParent:'>
<arg name='parent' declared_type='CCNode*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:'>
<arg name='position' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotation:'>
<arg name='rotation' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScale:'>
<arg name='scale' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScaleX:'>
<arg name='scaleX' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScaleY:'>
<arg name='scaleY' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScheduler:'>
<arg name='scheduler' declared_type='CCScheduler*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShaderProgram:'>
<arg name='shaderProgram' declared_type='CCGLProgram*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSkewX:'>
<arg name='skewX' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSkewY:'>
<arg name='skewY' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTag:'>
<arg name='tag' declared_type='NSInteger' type64='q' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserData:'>
<arg name='userData' declared_type='void*' type='^v' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserObject:'>
<arg name='userObject' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexZ:'>
<arg name='vertexZ' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVisible:'>
<arg name='visible' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZOrder:'>
<arg name='z' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shaderProgram'>
<retval declared_type='CCGLProgram*' type='@'/>
</method>
<method selector='skewX'>
<retval declared_type='float' type='f'/>
</method>
<method selector='skewY'>
<retval declared_type='float' type='f'/>
</method>
<method selector='sortAllChildren'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopAction:'>
<arg name='action' declared_type='CCAction*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopActionByTag:'>
<arg name='tag' declared_type='NSInteger' type64='q' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopAllActions'>
<retval declared_type='void' type='v'/>
</method>
<method selector='tag'>
<retval declared_type='NSInteger' type64='q' type='i'/>
</method>
<method selector='transform'>
<retval declared_type='void' type='v'/>
</method>
<method selector='transformAncestors'>
<retval declared_type='void' type='v'/>
</method>
<method selector='unschedule:'>
<arg name='s' declared_type='SEL' type=':' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unscheduleAllSelectors'>
<retval declared_type='void' type='v'/>
</method>
<method selector='unscheduleUpdate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='userData'>
<retval declared_type='void*' type='^v'/>
</method>
<method selector='userObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='vertexZ'>
<retval declared_type='float' type='f'/>
</method>
<method selector='visible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='visit'>
<retval declared_type='void' type='v'/>
</method>
<method selector='worldToNodeTransform'>
<retval declared_type='CGAffineTransform' type64='{CGAffineTransform=dddddd}' type='{CGAffineTransform=ffffff}'/>
</method>
<method selector='zOrder'>
<retval declared_type='NSInteger' type64='q' type='i'/>
</method>
</class>
<class name='CCOrbitCamera'>
<method selector='actionWithDuration:radius:deltaRadius:angleZ:deltaAngleZ:angleX:deltaAngleX:' class_method='true'>
<arg name='t' declared_type='float' type='f' index='0'/>
<arg name='r' declared_type='float' type='f' index='1'/>
<arg name='dr' declared_type='float' type='f' index='2'/>
<arg name='z' declared_type='float' type='f' index='3'/>
<arg name='dz' declared_type='float' type='f' index='4'/>
<arg name='x' declared_type='float' type='f' index='5'/>
<arg name='dx' declared_type='float' type='f' index='6'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:radius:deltaRadius:angleZ:deltaAngleZ:angleX:deltaAngleX:'>
<arg name='t' declared_type='float' type='f' index='0'/>
<arg name='r' declared_type='float' type='f' index='1'/>
<arg name='dr' declared_type='float' type='f' index='2'/>
<arg name='z' declared_type='float' type='f' index='3'/>
<arg name='dz' declared_type='float' type='f' index='4'/>
<arg name='x' declared_type='float' type='f' index='5'/>
<arg name='dx' declared_type='float' type='f' index='6'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='sphericalRadius:zenith:azimuth:'>
<arg name='r' declared_type='float*' type='^f' index='0'/>
<arg name='zenith' declared_type='float*' type='^f' index='1'/>
<arg name='azimuth' declared_type='float*' type='^f' index='2'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCParallaxNode'>
<method selector='addChild:z:parallaxRatio:positionOffset:'>
<arg name='node' declared_type='CCNode*' type='@' index='0'/>
<arg name='z' declared_type='NSInteger' type64='q' type='i' index='1'/>
<arg name='c' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='2'/>
<arg name='positionOffset' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='parallaxArray'>
<retval declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}'/>
</method>
<method selector='setParallaxArray:'>
<arg name='parallaxArray' declared_type='ccArray*' type64='^{ccArray=QQ^@}' type='^{ccArray=II^@}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCParticleBatchNode'>
<method selector='addChild:z:tag:'>
<arg name='child' declared_type='CCParticleSystem*' type='@' index='0'/>
<arg name='z' declared_type='NSInteger' type64='q' type='i' index='1'/>
<arg name='aTag' declared_type='NSInteger' type64='q' type='i' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='batchNodeWithFile:' class_method='true'>
<arg name='imageFile' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='batchNodeWithFile:capacity:' class_method='true'>
<arg name='fileImage' declared_type='NSString*' type='@' index='0'/>
<arg name='capacity' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='batchNodeWithTexture:' class_method='true'>
<arg name='tex' declared_type='CCTexture2D*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='batchNodeWithTexture:capacity:' class_method='true'>
<arg name='tex' declared_type='CCTexture2D*' type='@' index='0'/>
<arg name='capacity' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='disableParticle:'>
<arg name='particleIndex' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithFile:capacity:'>
<arg name='fileImage' declared_type='NSString*' type='@' index='0'/>
<arg name='capacity' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTexture:capacity:'>
<arg name='tex' declared_type='CCTexture2D*' type='@' index='0'/>
<arg name='capacity' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertChild:inAtlasAtIndex:'>
<arg name='pSystem' declared_type='CCParticleSystem*' type='@' index='0'/>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeChild:cleanup:'>
<arg name='pSystem' declared_type='CCParticleSystem*' type='@' index='0'/>
<arg name='doCleanUp' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendFunc:'>
<arg name='blendFunc' declared_type='ccBlendFunc' type='{_ccBlendFunc=II}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextureAtlas:'>
<arg name='textureAtlas' declared_type='CCTextureAtlas*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textureAtlas'>
<retval declared_type='CCTextureAtlas*' type='@'/>
</method>
</class>
<class name='CCParticleSystem'>
<method selector='active'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='angle'>
<retval declared_type='float' type='f'/>
</method>
<method selector='angleVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='atlasIndex'>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='autoRemoveOnFinish'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='batchNode'>
<retval declared_type='CCParticleBatchNode*' type='@'/>
</method>
<method selector='blendAdditive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='doesOpacityModifyRGB'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='duration'>
<retval declared_type='float' type='f'/>
</method>
<method selector='emissionRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='emitterMode'>
<retval declared_type='NSInteger' type64='q' type='i'/>
</method>
<method selector='endColor'>
<retval declared_type='ccColor4F' type='{ccColor4F=ffff}'/>
</method>
<method selector='endColorVar'>
<retval declared_type='ccColor4F' type='{ccColor4F=ffff}'/>
</method>
<method selector='endRadius'>
<retval declared_type='float' type='f'/>
</method>
<method selector='endRadiusVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='endSize'>
<retval declared_type='float' type='f'/>
</method>
<method selector='endSizeVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='endSpin'>
<retval declared_type='float' type='f'/>
</method>
<method selector='endSpinVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='gravity'>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='initWithDictionary:'>
<arg name='dictionary' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFile:'>
<arg name='plistFile' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTotalParticles:'>
<arg name='numberOfParticles' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isFull'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='life'>
<retval declared_type='float' type='f'/>
</method>
<method selector='lifeVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='particleCount'>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='particleWithFile:' class_method='true'>
<arg name='plistFile' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='posVar'>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='positionType'>
<retval declared_type='tCCPositionType' type='i'/>
</method>
<method selector='postStep'>
<retval declared_type='void' type='v'/>
</method>
<method selector='radialAccel'>
<retval declared_type='float' type='f'/>
</method>
<method selector='radialAccelVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='resetSystem'>
<retval declared_type='void' type='v'/>
</method>
<method selector='rotatePerSecond'>
<retval declared_type='float' type='f'/>
</method>
<method selector='rotatePerSecondVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setAngle:'>
<arg name='angle' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAngleVar:'>
<arg name='angleVar' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAtlasIndex:'>
<arg name='atlasIndex' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutoRemoveOnFinish:'>
<arg name='autoRemoveOnFinish' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBatchNode:'>
<arg name='batchNode' declared_type='CCParticleBatchNode*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendAdditive:'>
<arg name='blendAdditive' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendFunc:'>
<arg name='blendFunc' declared_type='ccBlendFunc' type='{_ccBlendFunc=II}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDuration:'>
<arg name='duration' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEmissionRate:'>
<arg name='emissionRate' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEmitterMode:'>
<arg name='emitterMode' declared_type='NSInteger' type64='q' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndColor:'>
<arg name='endColor' declared_type='ccColor4F' type='{ccColor4F=ffff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndColorVar:'>
<arg name='endColorVar' declared_type='ccColor4F' type='{ccColor4F=ffff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndRadius:'>
<arg name='endRadius' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndRadiusVar:'>
<arg name='endRadiusVar' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndSize:'>
<arg name='endSize' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndSizeVar:'>
<arg name='endSizeVar' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndSpin:'>
<arg name='endSpin' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndSpinVar:'>
<arg name='endSpinVar' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGravity:'>
<arg name='gravity' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLife:'>
<arg name='life' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLifeVar:'>
<arg name='lifeVar' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacityModifyRGB:'>
<arg name='opacityModifyRGB' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosVar:'>
<arg name='posVar' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPositionType:'>
<arg name='positionType' declared_type='tCCPositionType' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadialAccel:'>
<arg name='radialAccel' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadialAccelVar:'>
<arg name='radialAccelVar' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotatePerSecond:'>
<arg name='rotatePerSecond' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotatePerSecondVar:'>
<arg name='rotatePerSecondVar' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourcePosition:'>
<arg name='sourcePosition' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpeed:'>
<arg name='speed' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpeedVar:'>
<arg name='speedVar' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartColor:'>
<arg name='startColor' declared_type='ccColor4F' type='{ccColor4F=ffff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartColorVar:'>
<arg name='startColorVar' declared_type='ccColor4F' type='{ccColor4F=ffff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartRadius:'>
<arg name='startRadius' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartRadiusVar:'>
<arg name='startRadiusVar' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartSize:'>
<arg name='startSize' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartSizeVar:'>
<arg name='startSizeVar' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartSpin:'>
<arg name='startSpin' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartSpinVar:'>
<arg name='startSpinVar' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTangentialAccel:'>
<arg name='tangentialAccel' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTangentialAccelVar:'>
<arg name='tangentialAccelVar' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:'>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTotalParticles:'>
<arg name='totalParticles' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourcePosition'>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='speed'>
<retval declared_type='float' type='f'/>
</method>
<method selector='speedVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='startColor'>
<retval declared_type='ccColor4F' type='{ccColor4F=ffff}'/>
</method>
<method selector='startColorVar'>
<retval declared_type='ccColor4F' type='{ccColor4F=ffff}'/>
</method>
<method selector='startRadius'>
<retval declared_type='float' type='f'/>
</method>
<method selector='startRadiusVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='startSize'>
<retval declared_type='float' type='f'/>
</method>
<method selector='startSizeVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='startSpin'>
<retval declared_type='float' type='f'/>
</method>
<method selector='startSpinVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='stopSystem'>
<retval declared_type='void' type='v'/>
</method>
<method selector='tangentialAccel'>
<retval declared_type='float' type='f'/>
</method>
<method selector='tangentialAccelVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='texture'>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
<method selector='totalParticles'>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='update:'>
<arg name='dt' declared_type='ccTime' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateQuadWithParticle:newPosition:'>
<arg name='particle' declared_type='tCCParticle*' type64='^{sCCParticle={CGPoint=dd}{CGPoint=dd}{ccColor4F=ffff}{ccColor4F=ffff}fffffQ(?={?={CGPoint=dd}ff}{?=ffff})}' type='^{sCCParticle={CGPoint=ff}{CGPoint=ff}{ccColor4F=ffff}{ccColor4F=ffff}fffffI(?={?={CGPoint=ff}ff}{?=ffff})}' index='0'/>
<arg name='pos' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateWithNoTime'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCParticleSystemQuad'>
<method selector='initIndices'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initTexCoordsWithRect:'>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplayFrame:'>
<arg name='spriteFrame' declared_type='CCSpriteFrame*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:withRect:'>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='0'/>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCPlace'>
<method selector='actionWithPosition:' class_method='true'>
<arg name='pos' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPosition:'>
<arg name='pos' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCPointArray'>
<method selector='addControlPoint:'>
<arg name='controlPoint' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='arrayWithCapacity:' class_method='true'>
<arg name='capacity' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='controlPoints'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='getControlPointAtIndex:'>
<arg name='index' declared_type='NSInteger' type64='q' type='i' index='0'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='initWithCapacity:'>
<arg name='capacity' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertControlPoint:atIndex:'>
<arg name='controlPoint' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeControlPointAtIndex:'>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceControlPoint:atIndex:'>
<arg name='controlPoint' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reverse'>
<retval declared_type='CCPointArray*' type='@'/>
</method>
<method selector='reverseInline'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setControlPoints:'>
<arg name='controlPoints' declared_type='NSMutableArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCProfiler'>
<method selector='createAndAddTimerWithName:'>
<arg name='timerName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='CCProfilingTimer*' type='@'/>
</method>
<method selector='displayTimers'>
<retval declared_type='void' type='v'/>
</method>
<method selector='releaseAllTimers'>
<retval declared_type='void' type='v'/>
</method>
<method selector='releaseTimer:'>
<arg name='timerName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedProfiler' class_method='true'>
<retval declared_type='CCProfiler*' type='@'/>
</method>
</class>
<class name='CCProfilingTimer'>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCProgressFromTo'>
<method selector='actionWithDuration:from:to:' class_method='true'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='fromPercentage' declared_type='float' type='f' index='1'/>
<arg name='toPercentage' declared_type='float' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:from:to:'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='fromPercentage' declared_type='float' type='f' index='1'/>
<arg name='toPercentage' declared_type='float' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCProgressTimer'>
<method selector='barChangeRate'>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='color'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='initWithSprite:'>
<arg name='sprite' declared_type='CCSprite*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='midpoint'>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='opacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='percentage'>
<retval declared_type='float' type='f'/>
</method>
<method selector='progressWithSprite:' class_method='true'>
<arg name='sprite' declared_type='CCSprite*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='reverseDirection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBarChangeRate:'>
<arg name='barChangeRate' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg name='color' declared_type='ccColor3B' type='{_ccColor3B=CCC}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMidpoint:'>
<arg name='midpoint' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg name='opacity' declared_type='GLubyte' type='C' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPercentage:'>
<arg name='percentage' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReverseDirection:'>
<arg name='reverseDirection' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSprite:'>
<arg name='sprite' declared_type='CCSprite*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setType:'>
<arg name='type' declared_type='CCProgressTimerType' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sprite'>
<retval declared_type='CCSprite*' type='@'/>
</method>
<method selector='type'>
<retval declared_type='CCProgressTimerType' type='i'/>
</method>
<method selector='vertexData'>
<retval declared_type='ccV2F_C4B_T2F*' type='^{_ccV2F_C4B_T2F={_ccVertex2F=ff}{_ccColor4B=CCCC}{_ccTex2F=ff}}'/>
</method>
<method selector='vertexDataCount'>
<retval declared_type='int' type='i'/>
</method>
</class>
<class name='CCProgressTo'>
<method selector='actionWithDuration:percent:' class_method='true'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='percent' declared_type='float' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:percent:'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='percent' declared_type='float' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCRenderTexture'>
<method selector='begin'>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginWithClear:g:b:a:'>
<arg name='r' declared_type='float' type='f' index='0'/>
<arg name='g' declared_type='float' type='f' index='1'/>
<arg name='b' declared_type='float' type='f' index='2'/>
<arg name='a' declared_type='float' type='f' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginWithClear:g:b:a:depth:'>
<arg name='r' declared_type='float' type='f' index='0'/>
<arg name='g' declared_type='float' type='f' index='1'/>
<arg name='b' declared_type='float' type='f' index='2'/>
<arg name='a' declared_type='float' type='f' index='3'/>
<arg name='depthValue' declared_type='float' type='f' index='4'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginWithClear:g:b:a:depth:stencil:'>
<arg name='r' declared_type='float' type='f' index='0'/>
<arg name='g' declared_type='float' type='f' index='1'/>
<arg name='b' declared_type='float' type='f' index='2'/>
<arg name='a' declared_type='float' type='f' index='3'/>
<arg name='depthValue' declared_type='float' type='f' index='4'/>
<arg name='stencilValue' declared_type='int' type='i' index='5'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clear:g:b:a:'>
<arg name='r' declared_type='float' type='f' index='0'/>
<arg name='g' declared_type='float' type='f' index='1'/>
<arg name='b' declared_type='float' type='f' index='2'/>
<arg name='a' declared_type='float' type='f' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearDepth:'>
<arg name='depthValue' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearStencil:'>
<arg name='stencilValue' declared_type='int' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='end'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithWidth:height:pixelFormat:'>
<arg name='w' declared_type='int' type='i' index='0'/>
<arg name='h' declared_type='int' type='i' index='1'/>
<arg name='format' declared_type='CCTexture2DPixelFormat' type='i' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithWidth:height:pixelFormat:depthStencilFormat:'>
<arg name='w' declared_type='int' type='i' index='0'/>
<arg name='h' declared_type='int' type='i' index='1'/>
<arg name='format' declared_type='CCTexture2DPixelFormat' type='i' index='2'/>
<arg name='depthStencilFormat' declared_type='GLuint' type='I' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='newCGImage'>
<retval declared_type='CGImageRef' type='^{CGImage=}'/>
</method>
<method selector='renderTextureWithWidth:height:' class_method='true'>
<arg name='w' declared_type='int' type='i' index='0'/>
<arg name='h' declared_type='int' type='i' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='renderTextureWithWidth:height:pixelFormat:' class_method='true'>
<arg name='w' declared_type='int' type='i' index='0'/>
<arg name='h' declared_type='int' type='i' index='1'/>
<arg name='format' declared_type='CCTexture2DPixelFormat' type='i' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='renderTextureWithWidth:height:pixelFormat:depthStencilFormat:' class_method='true'>
<arg name='w' declared_type='int' type='i' index='0'/>
<arg name='h' declared_type='int' type='i' index='1'/>
<arg name='format' declared_type='CCTexture2DPixelFormat' type='i' index='2'/>
<arg name='depthStencilFormat' declared_type='GLuint' type='I' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='saveBuffer:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='saveBuffer:format:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='format' declared_type='int' type='i' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='saveToFile:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='saveToFile:format:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='format' declared_type='tCCImageFormat' type='i' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setSprite:'>
<arg name='sprite' declared_type='CCSprite*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sprite'>
<retval declared_type='CCSprite*' type='@'/>
</method>
</class>
<class name='CCRepeat'>
<method selector='actionWithAction:times:' class_method='true'>
<arg name='action' declared_type='CCFiniteTimeAction*' type='@' index='0'/>
<arg name='times' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:times:'>
<arg name='action' declared_type='CCFiniteTimeAction*' type='@' index='0'/>
<arg name='times' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='innerAction'>
<retval declared_type='CCFiniteTimeAction*' type='@'/>
</method>
<method selector='setInnerAction:'>
<arg name='innerAction' declared_type='CCFiniteTimeAction*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCRepeatForever'>
<method selector='actionWithAction:' class_method='true'>
<arg name='action' declared_type='CCActionInterval*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:'>
<arg name='action' declared_type='CCActionInterval*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='innerAction'>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
<method selector='setInnerAction:'>
<arg name='innerAction' declared_type='CCActionInterval*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCReuseGrid'>
<method selector='actionWithTimes:' class_method='true'>
<arg name='times' declared_type='int' type='i' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTimes:'>
<arg name='times' declared_type='int' type='i' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCReverseTime'>
<method selector='actionWithAction:' class_method='true'>
<arg name='action' declared_type='CCFiniteTimeAction*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:'>
<arg name='action' declared_type='CCFiniteTimeAction*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCRipple3D'>
<method selector='actionWithPosition:radius:waves:amplitude:grid:duration:' class_method='true'>
<arg name='pos' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<arg name='r' declared_type='float' type='f' index='1'/>
<arg name='wav' declared_type='int' type='i' index='2'/>
<arg name='amp' declared_type='float' type='f' index='3'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='4'/>
<arg name='d' declared_type='ccTime' type='f' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='amplitude'>
<retval declared_type='float' type='f'/>
</method>
<method selector='amplitudeRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithPosition:radius:waves:amplitude:grid:duration:'>
<arg name='pos' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<arg name='r' declared_type='float' type='f' index='1'/>
<arg name='wav' declared_type='int' type='i' index='2'/>
<arg name='amp' declared_type='float' type='f' index='3'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='4'/>
<arg name='d' declared_type='ccTime' type='f' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='position'>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='setAmplitude:'>
<arg name='amplitude' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAmplitudeRate:'>
<arg name='amplitudeRate' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:'>
<arg name='position' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCRotateBy'>
<method selector='actionWithDuration:angle:' class_method='true'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='deltaAngle' declared_type='float' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:angle:'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='deltaAngle' declared_type='float' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCRotateTo'>
<method selector='actionWithDuration:angle:' class_method='true'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='angle' declared_type='float' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:angle:'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='angle' declared_type='float' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCScaleTo'>
<method selector='actionWithDuration:scale:' class_method='true'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='s' declared_type='float' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actionWithDuration:scaleX:scaleY:' class_method='true'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='sx' declared_type='float' type='f' index='1'/>
<arg name='sy' declared_type='float' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:scale:'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='s' declared_type='float' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:scaleX:scaleY:'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='sx' declared_type='float' type='f' index='1'/>
<arg name='sy' declared_type='float' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCScheduler'>
<method selector='isTargetPaused:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pauseAllTargets'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='pauseAllTargetsWithMinPriority:'>
<arg name='minPriority' declared_type='NSInteger' type64='q' type='i' index='0'/>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='pauseTarget:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resumeTarget:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resumeTargets:'>
<arg name='targetsToResume' declared_type='NSSet*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleSelector:forTarget:interval:paused:'>
<arg name='selector' declared_type='SEL' type=':' index='0'/>
<arg name='target' declared_type='id' type='@' index='1'/>
<arg name='interval' declared_type='ccTime' type='f' index='2'/>
<arg name='paused' declared_type='BOOL' type='B' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleSelector:forTarget:interval:paused:repeat:delay:'>
<arg name='selector' declared_type='SEL' type=':' index='0'/>
<arg name='target' declared_type='id' type='@' index='1'/>
<arg name='interval' declared_type='ccTime' type='f' index='2'/>
<arg name='paused' declared_type='BOOL' type='B' index='3'/>
<arg name='repeat' declared_type='uint' type='I' index='4'/>
<arg name='delay' declared_type='ccTime' type='f' index='5'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleUpdateForTarget:priority:paused:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<arg name='priority' declared_type='NSInteger' type64='q' type='i' index='1'/>
<arg name='paused' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeScale:'>
<arg name='timeScale' declared_type='ccTime' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedScheduler' class_method='true'>
<retval declared_type='CCScheduler*' type='@'/>
</method>
<method selector='timeScale'>
<retval declared_type='ccTime' type='f'/>
</method>
<method selector='unscheduleAllSelectors'>
<retval declared_type='void' type='v'/>
</method>
<method selector='unscheduleAllSelectorsForTarget:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unscheduleAllSelectorsWithMinPriority:'>
<arg name='minPriority' declared_type='NSInteger' type64='q' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unscheduleSelector:forTarget:'>
<arg name='selector' declared_type='SEL' type=':' index='0'/>
<arg name='target' declared_type='id' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unscheduleUpdateForTarget:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='update:'>
<arg name='dt' declared_type='ccTime' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCSequence'>
<method selector='actionOne:two:' class_method='true'>
<arg name='actionOne' declared_type='CCFiniteTimeAction*' type='@' index='0'/>
<arg name='actionTwo' declared_type='CCFiniteTimeAction*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actionWithArray:' class_method='true'>
<arg name='arrayOfActions' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method variadic='true' sentinel='0' selector='actions:' class_method='true'>
<arg name='action1' declared_type='CCFiniteTimeAction*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actionsWithArray:' class_method='true'>
<arg name='actions' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initOne:two:'>
<arg name='actionOne' declared_type='CCFiniteTimeAction*' type='@' index='0'/>
<arg name='actionTwo' declared_type='CCFiniteTimeAction*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCShaderCache'>
<method selector='addProgram:forKey:'>
<arg name='program' declared_type='CCGLProgram*' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadDefaultShaders'>
<retval declared_type='void' type='v'/>
</method>
<method selector='programForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='CCGLProgram*' type='@'/>
</method>
<method selector='purgeSharedShaderCache' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedShaderCache' class_method='true'>
<retval declared_type='CCShaderCache*' type='@'/>
</method>
</class>
<class name='CCShaky3D'>
<method selector='actionWithRange:shakeZ:grid:duration:' class_method='true'>
<arg name='range' declared_type='int' type='i' index='0'/>
<arg name='shakeZ' declared_type='BOOL' type='B' index='1'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='2'/>
<arg name='d' declared_type='ccTime' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRange:shakeZ:grid:duration:'>
<arg name='range' declared_type='int' type='i' index='0'/>
<arg name='shakeZ' declared_type='BOOL' type='B' index='1'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='2'/>
<arg name='d' declared_type='ccTime' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCShakyTiles3D'>
<method selector='actionWithRange:shakeZ:grid:duration:' class_method='true'>
<arg name='range' declared_type='int' type='i' index='0'/>
<arg name='shakeZ' declared_type='BOOL' type='B' index='1'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='2'/>
<arg name='d' declared_type='ccTime' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRange:shakeZ:grid:duration:'>
<arg name='range' declared_type='int' type='i' index='0'/>
<arg name='shakeZ' declared_type='BOOL' type='B' index='1'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='2'/>
<arg name='d' declared_type='ccTime' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCShatteredTiles3D'>
<method selector='actionWithRange:shatterZ:grid:duration:' class_method='true'>
<arg name='range' declared_type='int' type='i' index='0'/>
<arg name='shatterZ' declared_type='BOOL' type='B' index='1'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='2'/>
<arg name='d' declared_type='ccTime' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRange:shatterZ:grid:duration:'>
<arg name='range' declared_type='int' type='i' index='0'/>
<arg name='shatterZ' declared_type='BOOL' type='B' index='1'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='2'/>
<arg name='d' declared_type='ccTime' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCShuffleTiles'>
<method selector='actionWithSeed:grid:duration:' class_method='true'>
<arg name='s' declared_type='int' type='i' index='0'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='1'/>
<arg name='d' declared_type='ccTime' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSeed:grid:duration:'>
<arg name='s' declared_type='int' type='i' index='0'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='1'/>
<arg name='d' declared_type='ccTime' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCSkewTo'>
<method selector='actionWithDuration:skewX:skewY:' class_method='true'>
<arg name='t' declared_type='ccTime' type='f' index='0'/>
<arg name='sx' declared_type='float' type='f' index='1'/>
<arg name='sy' declared_type='float' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:skewX:skewY:'>
<arg name='t' declared_type='ccTime' type='f' index='0'/>
<arg name='sx' declared_type='float' type='f' index='1'/>
<arg name='sy' declared_type='float' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCSpawn'>
<method selector='actionOne:two:' class_method='true'>
<arg name='one' declared_type='CCFiniteTimeAction*' type='@' index='0'/>
<arg name='two' declared_type='CCFiniteTimeAction*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actionWithArray:' class_method='true'>
<arg name='arrayOfActions' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method variadic='true' sentinel='0' selector='actions:' class_method='true'>
<arg name='action1' declared_type='CCFiniteTimeAction*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actionsWithArray:' class_method='true'>
<arg name='actions' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initOne:two:'>
<arg name='one' declared_type='CCFiniteTimeAction*' type='@' index='0'/>
<arg name='two' declared_type='CCFiniteTimeAction*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCSpeed'>
<method selector='actionWithAction:speed:' class_method='true'>
<arg name='action' declared_type='CCActionInterval*' type='@' index='0'/>
<arg name='value' declared_type='float' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:speed:'>
<arg name='action' declared_type='CCActionInterval*' type='@' index='0'/>
<arg name='value' declared_type='float' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='innerAction'>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
<method selector='setInnerAction:'>
<arg name='innerAction' declared_type='CCActionInterval*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpeed:'>
<arg name='speed' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speed'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='CCSplitCols'>
<method selector='actionWithCols:duration:' class_method='true'>
<arg name='cols' declared_type='int' type='i' index='0'/>
<arg name='duration' declared_type='ccTime' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithCols:duration:'>
<arg name='cols' declared_type='int' type='i' index='0'/>
<arg name='duration' declared_type='ccTime' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCSplitRows'>
<method selector='actionWithRows:duration:' class_method='true'>
<arg name='rows' declared_type='int' type='i' index='0'/>
<arg name='duration' declared_type='ccTime' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRows:duration:'>
<arg name='rows' declared_type='int' type='i' index='0'/>
<arg name='duration' declared_type='ccTime' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCSprite'>
<method selector='atlasIndex'>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='batchNode'>
<retval declared_type='CCSpriteBatchNode*' type='@'/>
</method>
<method selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='color'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='dirty'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='displayFrame'>
<retval declared_type='CCSpriteFrame*' type='@'/>
</method>
<method selector='displayedFrame'>
<retval declared_type='CCSpriteFrame*' type='@'/>
</method>
<method selector='flipX'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='flipY'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithBatchNode:rect:'>
<arg name='node' declared_type='CCSpriteBatchNode*' type='@' index='0'/>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithCGImage:key:'>
<arg name='image' declared_type='CGImageRef' type='^{CGImage=}' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFile:'>
<arg name='filename' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFile:rect:'>
<arg name='filename' declared_type='NSString*' type='@' index='0'/>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSpriteFrame:'>
<arg name='spriteFrame' declared_type='CCSpriteFrame*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSpriteFrameName:'>
<arg name='spriteFrameName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTexture:'>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTexture:rect:'>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='0'/>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTexture:rect:rotated:'>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='0'/>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<arg name='rotated' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isFrameDisplayed:'>
<arg name='frame' declared_type='CCSpriteFrame*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='offsetPosition'>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='opacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='quad'>
<retval declared_type='ccV3F_C4B_T2F_Quad' type='{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}'/>
</method>
<method selector='setAtlasIndex:'>
<arg name='atlasIndex' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBatchNode:'>
<arg name='batchNode' declared_type='CCSpriteBatchNode*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendFunc:'>
<arg name='blendFunc' declared_type='ccBlendFunc' type='{_ccBlendFunc=II}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg name='color' declared_type='ccColor3B' type='{_ccColor3B=CCC}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDirty:'>
<arg name='dirty' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplayFrame:'>
<arg name='newFrame' declared_type='CCSpriteFrame*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplayFrameWithAnimationName:index:'>
<arg name='animationName' declared_type='NSString*' type='@' index='0'/>
<arg name='frameIndex' declared_type='int' type='i' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFlipX:'>
<arg name='flipX' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFlipY:'>
<arg name='flipY' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg name='opacity' declared_type='GLubyte' type='C' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextureAtlas:'>
<arg name='textureAtlas' declared_type='CCTextureAtlas*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextureRect:'>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextureRect:rotated:untrimmedSize:'>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0'/>
<arg name='rotated' declared_type='BOOL' type='B' index='1'/>
<arg name='size' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexRect:'>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='spriteWithBatchNode:rect:' class_method='true'>
<arg name='node' declared_type='CCSpriteBatchNode*' type='@' index='0'/>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='spriteWithCGImage:key:' class_method='true'>
<arg name='image' declared_type='CGImageRef' type='^{CGImage=}' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='spriteWithFile:' class_method='true'>
<arg name='filename' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='spriteWithFile:rect:' class_method='true'>
<arg name='filename' declared_type='NSString*' type='@' index='0'/>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='spriteWithSpriteFrame:' class_method='true'>
<arg name='spriteFrame' declared_type='CCSpriteFrame*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='spriteWithSpriteFrameName:' class_method='true'>
<arg name='spriteFrameName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='spriteWithTexture:' class_method='true'>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='spriteWithTexture:rect:' class_method='true'>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='0'/>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='textureAtlas'>
<retval declared_type='CCTextureAtlas*' type='@'/>
</method>
<method selector='textureRect'>
<retval declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='textureRectRotated'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='updateTransform'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCSpriteBatchNode'>
<method selector='addQuadFromSprite:quadIndex:'>
<arg name='sprite' declared_type='CCSprite*' type='@' index='0'/>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSpriteWithoutQuad:z:tag:'>
<arg name='child' declared_type='CCSprite*' type='@' index='0'/>
<arg name='z' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<arg name='aTag' declared_type='NSInteger' type64='q' type='i' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='appendChild:'>
<arg name='sprite' declared_type='CCSprite*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='atlasIndexForChild:atZ:'>
<arg name='sprite' declared_type='CCSprite*' type='@' index='0'/>
<arg name='z' declared_type='NSInteger' type64='q' type='i' index='1'/>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='batchNodeWithFile:' class_method='true'>
<arg name='fileImage' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='batchNodeWithFile:capacity:' class_method='true'>
<arg name='fileImage' declared_type='NSString*' type='@' index='0'/>
<arg name='capacity' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='batchNodeWithTexture:' class_method='true'>
<arg name='tex' declared_type='CCTexture2D*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='batchNodeWithTexture:capacity:' class_method='true'>
<arg name='tex' declared_type='CCTexture2D*' type='@' index='0'/>
<arg name='capacity' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='descendants'>
<retval declared_type='CCArray*' type='@'/>
</method>
<method selector='increaseAtlasCapacity'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithFile:capacity:'>
<arg name='fileImage' declared_type='NSString*' type='@' index='0'/>
<arg name='capacity' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTexture:capacity:'>
<arg name='tex' declared_type='CCTexture2D*' type='@' index='0'/>
<arg name='capacity' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertChild:inAtlasAtIndex:'>
<arg name='child' declared_type='CCSprite*' type='@' index='0'/>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rebuildIndexInOrder:atlasIndex:'>
<arg name='parent' declared_type='CCSprite*' type='@' index='0'/>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='removeChild:cleanup:'>
<arg name='sprite' declared_type='CCSprite*' type='@' index='0'/>
<arg name='doCleanup' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeChildAtIndex:cleanup:'>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<arg name='doCleanup' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSpriteFromAtlas:'>
<arg name='sprite' declared_type='CCSprite*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reorderBatch:'>
<arg name='reorder' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendFunc:'>
<arg name='blendFunc' declared_type='ccBlendFunc' type='{_ccBlendFunc=II}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextureAtlas:'>
<arg name='textureAtlas' declared_type='CCTextureAtlas*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textureAtlas'>
<retval declared_type='CCTextureAtlas*' type='@'/>
</method>
</class>
<class name='CCSpriteFrame'>
<method selector='frameWithTexture:rect:' class_method='true'>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='0'/>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='frameWithTexture:rectInPixels:rotated:offset:originalSize:' class_method='true'>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='0'/>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<arg name='rotated' declared_type='BOOL' type='B' index='2'/>
<arg name='offset' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='3'/>
<arg name='originalSize' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='frameWithTextureFilename:rect:' class_method='true'>
<arg name='filename' declared_type='NSString*' type='@' index='0'/>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='frameWithTextureFilename:rectInPixels:rotated:offset:originalSize:' class_method='true'>
<arg name='filename' declared_type='NSString*' type='@' index='0'/>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<arg name='rotated' declared_type='BOOL' type='B' index='2'/>
<arg name='offset' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='3'/>
<arg name='originalSize' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTexture:rect:'>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='0'/>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTexture:rectInPixels:rotated:offset:originalSize:'>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='0'/>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<arg name='rotated' declared_type='BOOL' type='B' index='2'/>
<arg name='offset' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='3'/>
<arg name='originalSize' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTextureFilename:rect:'>
<arg name='filename' declared_type='NSString*' type='@' index='0'/>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTextureFilename:rectInPixels:rotated:offset:originalSize:'>
<arg name='filename' declared_type='NSString*' type='@' index='0'/>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<arg name='rotated' declared_type='BOOL' type='B' index='2'/>
<arg name='offset' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='3'/>
<arg name='originalSize' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='offset'>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='offsetInPixels'>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='originalSize'>
<retval declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}'/>
</method>
<method selector='originalSizeInPixels'>
<retval declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}'/>
</method>
<method selector='rect'>
<retval declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='rectInPixels'>
<retval declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='rotated'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setOffset:'>
<arg name='offset' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOffsetInPixels:'>
<arg name='offsetInPixels' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOriginalSize:'>
<arg name='originalSize' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOriginalSizeInPixels:'>
<arg name='originalSizeInPixels' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRect:'>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRectInPixels:'>
<arg name='rectInPixels' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotated:'>
<arg name='rotated' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:'>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='texture'>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
<method selector='textureFilename'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='CCSpriteFrameCache'>
<method selector='addSpriteFrame:name:'>
<arg name='frame' declared_type='CCSpriteFrame*' type='@' index='0'/>
<arg name='frameName' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSpriteFramesWithDictionary:textureFile:'>
<arg name='dictionary' declared_type='NSDictionary*' type='@' index='0'/>
<arg name='filename' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSpriteFramesWithFile:'>
<arg name='plist' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSpriteFramesWithFile:texture:'>
<arg name='plist' declared_type='NSString*' type='@' index='0'/>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSpriteFramesWithFile:textureFile:'>
<arg name='plist' declared_type='NSString*' type='@' index='0'/>
<arg name='filename' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSpriteFramesWithFile:textureFilename:'>
<arg name='plist' declared_type='NSString*' type='@' index='0'/>
<arg name='filename' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='purgeSharedSpriteFrameCache' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSpriteFrameByName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSpriteFrames'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSpriteFramesFromFile:'>
<arg name='plist' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSpriteFramesFromTexture:'>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeUnusedSpriteFrames'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedSpriteFrameCache' class_method='true'>
<retval declared_type='CCSpriteFrameCache*' type='@'/>
</method>
<method selector='spriteFrameByName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='CCSpriteFrame*' type='@'/>
</method>
</class>
<class name='CCTMXLayer'>
<method selector='addChild:z:tag:'>
<arg name='node' declared_type='CCNode*' type='@' index='0'/>
<arg name='z' declared_type='NSInteger' type64='q' type='i' index='1'/>
<arg name='tag' declared_type='NSInteger' type64='q' type='i' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithTilesetInfo:layerInfo:mapInfo:'>
<arg name='tilesetInfo' declared_type='CCTMXTilesetInfo*' type='@' index='0'/>
<arg name='layerInfo' declared_type='CCTMXLayerInfo*' type='@' index='1'/>
<arg name='mapInfo' declared_type='CCTMXMapInfo*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layerName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='layerOrientation'>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='layerSize'>
<retval declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}'/>
</method>
<method selector='layerWithTilesetInfo:layerInfo:mapInfo:' class_method='true'>
<arg name='tilesetInfo' declared_type='CCTMXTilesetInfo*' type='@' index='0'/>
<arg name='layerInfo' declared_type='CCTMXLayerInfo*' type='@' index='1'/>
<arg name='mapInfo' declared_type='CCTMXMapInfo*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mapTileSize'>
<retval declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}'/>
</method>
<method selector='positionAt:'>
<arg name='tileCoordinate' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='properties'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='propertyNamed:'>
<arg name='propertyName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='releaseMap'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTileAt:'>
<arg name='tileCoordinate' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayerName:'>
<arg name='layerName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayerOrientation:'>
<arg name='layerOrientation' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayerSize:'>
<arg name='layerSize' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapTileSize:'>
<arg name='mapTileSize' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProperties:'>
<arg name='properties' declared_type='NSMutableArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileGID:at:'>
<arg name='gid' declared_type='uint32_t' type='I' index='0'/>
<arg name='tileCoordinate' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileGID:at:withFlags:'>
<arg name='gid' declared_type='uint32_t' type='I' index='0'/>
<arg name='pos' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='1'/>
<arg name='flags' declared_type='ccTMXTileFlags' type='i' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTiles:'>
<arg name='tiles' declared_type='uint32_t*' type='^I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileset:'>
<arg name='tileset' declared_type='CCTMXTilesetInfo*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setupTiles'>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileAt:'>
<arg name='tileCoordinate' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='CCSprite*' type='@'/>
</method>
<method selector='tileGIDAt:'>
<arg name='tileCoordinate' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='tileGIDAt:withFlags:'>
<arg name='pos' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<arg name='flags' declared_type='ccTMXTileFlags*' type='^i' index='1'/>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='tiles'>
<retval declared_type='uint32_t*' type='^I'/>
</method>
<method selector='tileset'>
<retval declared_type='CCTMXTilesetInfo*' type='@'/>
</method>
</class>
<class name='CCTMXLayerInfo'>
<method selector='layerSize'>
<retval declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}'/>
</method>
<method selector='maxGID'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='minGID'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='offset'>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='opacity'>
<retval declared_type='unsigned char' type='C'/>
</method>
<method selector='ownTiles'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='properties'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='setLayerSize:'>
<arg name='layerSize' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxGID:'>
<arg name='maxGID' declared_type='unsigned int' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinGID:'>
<arg name='minGID' declared_type='unsigned int' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOffset:'>
<arg name='offset' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg name='opacity' declared_type='unsigned char' type='C' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOwnTiles:'>
<arg name='ownTiles' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProperties:'>
<arg name='properties' declared_type='NSMutableDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTiles:'>
<arg name='tiles' declared_type='unsigned int*' type='^I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVisible:'>
<arg name='visible' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tiles'>
<retval declared_type='unsigned int*' type='^I'/>
</method>
<method selector='visible'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='CCTMXMapInfo'>
<method selector='filename'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='formatWithTMXFile:' class_method='true'>
<arg name='tmxFile' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='formatWithXML:resourcePath:' class_method='true'>
<arg name='tmxString' declared_type='NSString*' type='@' index='0'/>
<arg name='resourcePath' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTMXFile:'>
<arg name='tmxFile' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithXML:resourcePath:'>
<arg name='tmxString' declared_type='NSString*' type='@' index='0'/>
<arg name='resourcePath' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layers'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='mapSize'>
<retval declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}'/>
</method>
<method selector='objectGroups'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='orientation'>
<retval declared_type='int' type='i'/>
</method>
<method selector='properties'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='resources'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setFilename:'>
<arg name='filename' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayers:'>
<arg name='layers' declared_type='NSMutableArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapSize:'>
<arg name='mapSize' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectGroups:'>
<arg name='objectGroups' declared_type='NSMutableArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrientation:'>
<arg name='orientation' declared_type='int' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProperties:'>
<arg name='properties' declared_type='NSMutableDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResources:'>
<arg name='resources' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileProperties:'>
<arg name='tileProperties' declared_type='NSMutableDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileSize:'>
<arg name='tileSize' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTilesets:'>
<arg name='tilesets' declared_type='NSMutableArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileProperties'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='tileSize'>
<retval declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}'/>
</method>
<method selector='tilesets'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
</class>
<class name='CCTMXObjectGroup'>
<method selector='groupName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='objectNamed:'>
<arg name='objectName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='objects'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='positionOffset'>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='properties'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='propertyNamed:'>
<arg name='propertyName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setGroupName:'>
<arg name='groupName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjects:'>
<arg name='objects' declared_type='NSMutableArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPositionOffset:'>
<arg name='positionOffset' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProperties:'>
<arg name='properties' declared_type='NSMutableDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTMXTiledMap'>
<method selector='initWithTMXFile:'>
<arg name='tmxFile' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithXML:resourcePath:'>
<arg name='tmxString' declared_type='NSString*' type='@' index='0'/>
<arg name='resourcePath' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layerNamed:'>
<arg name='layerName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='CCTMXLayer*' type='@'/>
</method>
<method selector='mapOrientation'>
<retval declared_type='int' type='i'/>
</method>
<method selector='mapSize'>
<retval declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}'/>
</method>
<method selector='objectGroupNamed:'>
<arg name='groupName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='CCTMXObjectGroup*' type='@'/>
</method>
<method selector='objectGroups'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='properties'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='propertiesForGID:'>
<arg name='GID' declared_type='unsigned int' type='I' index='0'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='propertyNamed:'>
<arg name='propertyName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setObjectGroups:'>
<arg name='objectGroups' declared_type='NSMutableArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProperties:'>
<arg name='properties' declared_type='NSMutableDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileSize'>
<retval declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}'/>
</method>
<method selector='tiledMapWithTMXFile:' class_method='true'>
<arg name='tmxFile' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='tiledMapWithXML:resourcePath:' class_method='true'>
<arg name='tmxString' declared_type='NSString*' type='@' index='0'/>
<arg name='resourcePath' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTMXTilesetInfo'>
<method selector='firstGid'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='imageSize'>
<retval declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}'/>
</method>
<method selector='margin'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='rectForGID:'>
<arg name='gid' declared_type='unsigned int' type='I' index='0'/>
<retval declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='setFirstGid:'>
<arg name='firstGid' declared_type='unsigned int' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageSize:'>
<arg name='imageSize' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMargin:'>
<arg name='margin' declared_type='unsigned int' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceImage:'>
<arg name='sourceImage' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpacing:'>
<arg name='spacing' declared_type='unsigned int' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileSize:'>
<arg name='tileSize' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceImage'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='spacing'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='tileSize'>
<retval declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}'/>
</method>
</class>
<class name='CCTargetedAction'>
<method selector='actionWithTarget:action:' class_method='true'>
<arg name='target' declared_type='id' type='@' index='0'/>
<arg name='action' declared_type='CCFiniteTimeAction*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='forcedTarget'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTarget:action:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<arg name='action' declared_type='CCFiniteTimeAction*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setForcedTarget:'>
<arg name='forcedTarget' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTexture2D'>
<method selector='PVRImagesHavePremultipliedAlpha:' class_method='true'>
<arg name='haveAlphaPremultiplied' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bitsPerPixelForFormat'>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='bitsPerPixelForFormat:' class_method='true'>
<arg name='format' declared_type='CCTexture2DPixelFormat' type='i' index='0'/>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='contentSize'>
<retval declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}'/>
</method>
<method selector='contentSizeInPixels'>
<retval declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}'/>
</method>
<method selector='defaultAlphaPixelFormat' class_method='true'>
<retval declared_type='CCTexture2DPixelFormat' type='i'/>
</method>
<method selector='drawAtPoint:'>
<arg name='point' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawInRect:'>
<arg name='rect' declared_type='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='generateMipmap'>
<retval declared_type='void' type='v'/>
</method>
<method selector='hasPremultipliedAlpha'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithCGImage:'>
<arg name='cgImage' declared_type='CGImageRef' type='^{CGImage=}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithData:pixelFormat:pixelsWide:pixelsHigh:contentSize:'>
<arg name='data' declared_type='void*' const='true' type='^v' index='0'/>
<arg name='pixelFormat' declared_type='CCTexture2DPixelFormat' type='i' index='1'/>
<arg name='width' declared_type='NSUInteger' type64='Q' type='I' index='2'/>
<arg name='height' declared_type='NSUInteger' type64='Q' type='I' index='3'/>
<arg name='size' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPVRFile:'>
<arg name='file' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:dimensions:alignment:fontName:fontSize:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='dimensions' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='1'/>
<arg name='alignment' declared_type='CCTextAlignment' type='i' index='2'/>
<arg name='name' declared_type='NSString*' type='@' index='3'/>
<arg name='size' declared_type='CGFloat' type64='d' type='f' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:dimensions:alignment:lineBreakMode:fontName:fontSize:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='dimensions' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='1'/>
<arg name='alignment' declared_type='CCTextAlignment' type='i' index='2'/>
<arg name='lineBreakMode' declared_type='CCLineBreakMode' type='i' index='3'/>
<arg name='name' declared_type='NSString*' type='@' index='4'/>
<arg name='size' declared_type='CGFloat' type64='d' type='f' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:dimensions:hAlignment:vAlignment:fontName:fontSize:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='dimensions' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='1'/>
<arg name='alignment' declared_type='CCTextAlignment' type='i' index='2'/>
<arg name='vertAlignment' declared_type='CCVerticalTextAlignment' type='i' index='3'/>
<arg name='name' declared_type='NSString*' type='@' index='4'/>
<arg name='size' declared_type='CGFloat' type64='d' type='f' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:dimensions:hAlignment:vAlignment:lineBreakMode:fontName:fontSize:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='dimensions' declared_type='CGSize' type64='{CGSize=dd}' type='{CGSize=ff}' index='1'/>
<arg name='alignment' declared_type='CCTextAlignment' type='i' index='2'/>
<arg name='vertAlignment' declared_type='CCVerticalTextAlignment' type='i' index='3'/>
<arg name='lineBreakMode' declared_type='CCLineBreakMode' type='i' index='4'/>
<arg name='name' declared_type='NSString*' type='@' index='5'/>
<arg name='size' declared_type='CGFloat' type64='d' type='f' index='6'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:fontName:fontSize:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='name' declared_type='NSString*' type='@' index='1'/>
<arg name='size' declared_type='CGFloat' type64='d' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='keepData:length:'>
<arg name='data' declared_type='void*' type='^v' index='0'/>
<arg name='length' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='void*' type='^v'/>
</method>
<method selector='maxS'>
<retval declared_type='GLfloat' type='f'/>
</method>
<method selector='maxT'>
<retval declared_type='GLfloat' type='f'/>
</method>
<method selector='name'>
<retval declared_type='GLuint' type='I'/>
</method>
<method selector='pixelFormat'>
<retval declared_type='CCTexture2DPixelFormat' type='i'/>
</method>
<method selector='pixelsHigh'>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='pixelsWide'>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='releaseData:'>
<arg name='data' declared_type='void*' type='^v' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAliasTexParameters'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAntiAliasTexParameters'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultAlphaPixelFormat:' class_method='true'>
<arg name='format' declared_type='CCTexture2DPixelFormat' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxS:'>
<arg name='maxS' declared_type='GLfloat' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxT:'>
<arg name='maxT' declared_type='GLfloat' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShaderProgram:'>
<arg name='shaderProgram' declared_type='CCGLProgram*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexParameters:'>
<arg name='texParams' declared_type='ccTexParams*' type='^{_ccTexParams=IIII}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shaderProgram'>
<retval declared_type='CCGLProgram*' type='@'/>
</method>
<method selector='stringForFormat'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='CCTextureAtlas'>
<method selector='capacity'>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='drawNumberOfQuads:'>
<arg name='n' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawNumberOfQuads:fromIndex:'>
<arg name='n' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<arg name='start' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawQuads'>
<retval declared_type='void' type='v'/>
</method>
<method selector='fillWithEmptyQuadsFromIndex:amount:'>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<arg name='amount' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='increaseTotalQuadsWith:'>
<arg name='amount' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithFile:capacity:'>
<arg name='file' declared_type='NSString*' type='@' index='0'/>
<arg name='capacity' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTexture:capacity:'>
<arg name='tex' declared_type='CCTexture2D*' type='@' index='0'/>
<arg name='capacity' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertQuad:atIndex:'>
<arg name='quad' declared_type='ccV3F_C4B_T2F_Quad*' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' index='0'/>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertQuadFromIndex:atIndex:'>
<arg name='fromIndex' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<arg name='newIndex' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertQuads:atIndex:amount:'>
<arg name='quads' declared_type='ccV3F_C4B_T2F_Quad*' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' index='0'/>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<arg name='amount' declared_type='NSUInteger' type64='Q' type='I' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveQuadsFromIndex:amount:atIndex:'>
<arg name='oldIndex' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<arg name='amount' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<arg name='newIndex' declared_type='NSUInteger' type64='Q' type='I' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveQuadsFromIndex:to:'>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<arg name='newIndex' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='quads'>
<retval declared_type='ccV3F_C4B_T2F_Quad*' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}'/>
</method>
<method selector='removeAllQuads'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeQuadAtIndex:'>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeQuadsAtIndex:amount:'>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<arg name='amount' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resizeCapacity:'>
<arg name='n' declared_type='NSUInteger' type64='Q' type='I' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setQuads:'>
<arg name='quads' declared_type='ccV3F_C4B_T2F_Quad*' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:'>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='texture'>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
<method selector='textureAtlasWithFile:capacity:' class_method='true'>
<arg name='file' declared_type='NSString*' type='@' index='0'/>
<arg name='capacity' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='textureAtlasWithTexture:capacity:' class_method='true'>
<arg name='tex' declared_type='CCTexture2D*' type='@' index='0'/>
<arg name='capacity' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='totalQuads'>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='updateQuad:atIndex:'>
<arg name='quad' declared_type='ccV3F_C4B_T2F_Quad*' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' index='0'/>
<arg name='index' declared_type='NSUInteger' type64='Q' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTextureCache'>
<method selector='addCGImage:forKey:'>
<arg name='image' declared_type='CGImageRef' type='^{CGImage=}' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
<method selector='addImage:'>
<arg name='fileimage' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
<method selector='addImageAsync:target:selector:'>
<arg name='filename' declared_type='NSString*' type='@' index='0'/>
<arg name='target' declared_type='id' type='@' index='1'/>
<arg name='selector' declared_type='SEL' type=':' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addImageAsync:withBlock:'>
<arg name='filename' declared_type='NSString*' type='@' index='0'/>
<arg name='block' function_pointer='true' declared_type='void (^)(CCTexture2D *)' type='@?' index='1'>
<arg declared_type='CCTexture2D*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addPVRImage:'>
<arg name='filename' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
<method selector='dumpCachedTextureInfo'>
<retval declared_type='void' type='v'/>
</method>
<method selector='purgeSharedTextureCache' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllTextures'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTexture:'>
<arg name='tex' declared_type='CCTexture2D*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTextureForKey:'>
<arg name='textureKeyName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeUnusedTextures'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedTextureCache' class_method='true'>
<retval declared_type='CCTextureCache*' type='@'/>
</method>
<method selector='textureForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
</class>
<class name='CCTexturePVR'>
<method selector='format'>
<retval declared_type='CCTexture2DPixelFormat' type='i'/>
</method>
<method selector='hasAlpha'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='height'>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='GLuint' type='I'/>
</method>
<method selector='numberOfMipmaps'>
<retval declared_type='NSUInteger' type64='Q' type='I'/>
</method>
<method selector='pvrTextureWithContentsOfFile:' class_method='true'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='pvrTextureWithContentsOfURL:' class_method='true'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='retainName'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setRetainName:'>
<arg name='retainName' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='width'>
<retval declared_type='uint32_t' type='I'/>
</method>
</class>
<class name='CCTileMapAtlas'>
<method selector='initWithTileFile:mapFile:tileWidth:tileHeight:'>
<arg name='tile' declared_type='NSString*' type='@' index='0'/>
<arg name='map' declared_type='NSString*' type='@' index='1'/>
<arg name='w' declared_type='int' type='i' index='2'/>
<arg name='h' declared_type='int' type='i' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='releaseMap'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTile:at:'>
<arg name='tile' declared_type='ccColor3B' type='{_ccColor3B=CCC}' index='0'/>
<arg name='position' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tgaInfo'>
<retval declared_type='tImageTGA*' type='^{sImageTGA=iCCss*i}'/>
</method>
<method selector='tileAt:'>
<arg name='position' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='tileMapAtlasWithTileFile:mapFile:tileWidth:tileHeight:' class_method='true'>
<arg name='tile' declared_type='NSString*' type='@' index='0'/>
<arg name='map' declared_type='NSString*' type='@' index='1'/>
<arg name='w' declared_type='int' type='i' index='2'/>
<arg name='h' declared_type='int' type='i' index='3'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTiledGrid3D'>
<method selector='originalTile:'>
<arg name='pos' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='ccQuad3' type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}'/>
</method>
<method selector='setTile:coords:'>
<arg name='pos' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='0'/>
<arg name='coords' declared_type='ccQuad3' type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tile:'>
<arg name='pos' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='ccQuad3' type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}'/>
</method>
</class>
<class name='CCTiledGrid3DAction'>
<method selector='originalTile:'>
<arg name='pos' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='ccQuad3' type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}'/>
</method>
<method selector='setTile:coords:'>
<arg name='pos' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='0'/>
<arg name='coords' declared_type='ccQuad3' type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tile:'>
<arg name='pos' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='ccQuad3' type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}'/>
</method>
</class>
<class name='CCTimer'>
<method selector='initWithTarget:selector:'>
<arg name='t' declared_type='id' type='@' index='0'/>
<arg name='s' declared_type='SEL' type=':' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTarget:selector:interval:repeat:delay:'>
<arg name='t' declared_type='id' type='@' index='0'/>
<arg name='s' declared_type='SEL' type=':' index='1'/>
<arg name='seconds' declared_type='ccTime' type='f' index='2'/>
<arg name='r' declared_type='uint' type='I' index='3'/>
<arg name='d' declared_type='ccTime' type='f' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='interval'>
<retval declared_type='ccTime' type='f'/>
</method>
<method selector='setInterval:'>
<arg name='interval' declared_type='ccTime' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='timerWithTarget:selector:' class_method='true'>
<arg name='t' declared_type='id' type='@' index='0'/>
<arg name='s' declared_type='SEL' type=':' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='timerWithTarget:selector:interval:' class_method='true'>
<arg name='t' declared_type='id' type='@' index='0'/>
<arg name='s' declared_type='SEL' type=':' index='1'/>
<arg name='seconds' declared_type='ccTime' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='update:'>
<arg name='dt' declared_type='ccTime' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTintBy'>
<method selector='actionWithDuration:red:green:blue:' class_method='true'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='deltaRed' declared_type='GLshort' type='s' index='1'/>
<arg name='deltaGreen' declared_type='GLshort' type='s' index='2'/>
<arg name='deltaBlue' declared_type='GLshort' type='s' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:red:green:blue:'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='deltaRed' declared_type='GLshort' type='s' index='1'/>
<arg name='deltaGreen' declared_type='GLshort' type='s' index='2'/>
<arg name='deltaBlue' declared_type='GLshort' type='s' index='3'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTintTo'>
<method selector='actionWithDuration:red:green:blue:' class_method='true'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='red' declared_type='GLubyte' type='C' index='1'/>
<arg name='green' declared_type='GLubyte' type='C' index='2'/>
<arg name='blue' declared_type='GLubyte' type='C' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:red:green:blue:'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='red' declared_type='GLubyte' type='C' index='1'/>
<arg name='green' declared_type='GLubyte' type='C' index='2'/>
<arg name='blue' declared_type='GLubyte' type='C' index='3'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTransitionFade'>
<method selector='initWithDuration:scene:withColor:'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='scene' declared_type='CCScene*' type='@' index='1'/>
<arg name='color' declared_type='ccColor3B' type='{_ccColor3B=CCC}' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='transitionWithDuration:scene:withColor:' class_method='true'>
<arg name='duration' declared_type='ccTime' type='f' index='0'/>
<arg name='scene' declared_type='CCScene*' type='@' index='1'/>
<arg name='color' declared_type='ccColor3B' type='{_ccColor3B=CCC}' index='2'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTransitionFadeTR'>
<method selector='actionWithSize:'>
<arg name='vector' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
</class>
<class name='CCTransitionMoveInL'>
<method selector='action'>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
<method selector='initScenes'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTransitionPageTurn'>
<method selector='actionWithSize:'>
<arg name='vector' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
<method selector='initWithDuration:scene:backwards:'>
<arg name='t' declared_type='ccTime' type='f' index='0'/>
<arg name='s' declared_type='CCScene*' type='@' index='1'/>
<arg name='back' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='transitionWithDuration:scene:backwards:' class_method='true'>
<arg name='t' declared_type='ccTime' type='f' index='0'/>
<arg name='s' declared_type='CCScene*' type='@' index='1'/>
<arg name='back' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTransitionScene'>
<method selector='finish'>
<retval declared_type='void' type='v'/>
</method>
<method selector='hideOutShowIn'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithDuration:scene:'>
<arg name='t' declared_type='ccTime' type='f' index='0'/>
<arg name='s' declared_type='CCScene*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='transitionWithDuration:scene:' class_method='true'>
<arg name='t' declared_type='ccTime' type='f' index='0'/>
<arg name='s' declared_type='CCScene*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTransitionSceneOriented'>
<method selector='initWithDuration:scene:orientation:'>
<arg name='t' declared_type='ccTime' type='f' index='0'/>
<arg name='s' declared_type='CCScene*' type='@' index='1'/>
<arg name='o' declared_type='tOrientation' type='i' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='transitionWithDuration:scene:orientation:' class_method='true'>
<arg name='t' declared_type='ccTime' type='f' index='0'/>
<arg name='s' declared_type='CCScene*' type='@' index='1'/>
<arg name='o' declared_type='tOrientation' type='i' index='2'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTransitionSlideInL'>
<method selector='action'>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
<method selector='initScenes'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTransitionSplitCols'>
<method selector='action'>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
</class>
<class name='CCTurnOffTiles'>
<method selector='actionWithSeed:grid:duration:' class_method='true'>
<arg name='s' declared_type='int' type='i' index='0'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='1'/>
<arg name='d' declared_type='ccTime' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSeed:grid:duration:'>
<arg name='s' declared_type='int' type='i' index='0'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='1'/>
<arg name='d' declared_type='ccTime' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTwirl'>
<method selector='actionWithPosition:twirls:amplitude:grid:duration:' class_method='true'>
<arg name='pos' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<arg name='t' declared_type='int' type='i' index='1'/>
<arg name='amp' declared_type='float' type='f' index='2'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='3'/>
<arg name='d' declared_type='ccTime' type='f' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='amplitude'>
<retval declared_type='float' type='f'/>
</method>
<method selector='amplitudeRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithPosition:twirls:amplitude:grid:duration:'>
<arg name='pos' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<arg name='t' declared_type='int' type='i' index='1'/>
<arg name='amp' declared_type='float' type='f' index='2'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='3'/>
<arg name='d' declared_type='ccTime' type='f' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='position'>
<retval declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}'/>
</method>
<method selector='setAmplitude:'>
<arg name='amplitude' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAmplitudeRate:'>
<arg name='amplitudeRate' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:'>
<arg name='position' declared_type='CGPoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCWaves'>
<method selector='actionWithWaves:amplitude:horizontal:vertical:grid:duration:' class_method='true'>
<arg name='wav' declared_type='int' type='i' index='0'/>
<arg name='amp' declared_type='float' type='f' index='1'/>
<arg name='h' declared_type='BOOL' type='B' index='2'/>
<arg name='v' declared_type='BOOL' type='B' index='3'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='4'/>
<arg name='d' declared_type='ccTime' type='f' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='amplitude'>
<retval declared_type='float' type='f'/>
</method>
<method selector='amplitudeRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithWaves:amplitude:horizontal:vertical:grid:duration:'>
<arg name='wav' declared_type='int' type='i' index='0'/>
<arg name='amp' declared_type='float' type='f' index='1'/>
<arg name='h' declared_type='BOOL' type='B' index='2'/>
<arg name='v' declared_type='BOOL' type='B' index='3'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='4'/>
<arg name='d' declared_type='ccTime' type='f' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAmplitude:'>
<arg name='amplitude' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAmplitudeRate:'>
<arg name='amplitudeRate' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCWaves3D'>
<method selector='actionWithWaves:amplitude:grid:duration:' class_method='true'>
<arg name='wav' declared_type='int' type='i' index='0'/>
<arg name='amp' declared_type='float' type='f' index='1'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='2'/>
<arg name='d' declared_type='ccTime' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='amplitude'>
<retval declared_type='float' type='f'/>
</method>
<method selector='amplitudeRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithWaves:amplitude:grid:duration:'>
<arg name='wav' declared_type='int' type='i' index='0'/>
<arg name='amp' declared_type='float' type='f' index='1'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='2'/>
<arg name='d' declared_type='ccTime' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAmplitude:'>
<arg name='amplitude' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAmplitudeRate:'>
<arg name='amplitudeRate' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCWavesTiles3D'>
<method selector='actionWithWaves:amplitude:grid:duration:' class_method='true'>
<arg name='wav' declared_type='int' type='i' index='0'/>
<arg name='amp' declared_type='float' type='f' index='1'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='2'/>
<arg name='d' declared_type='ccTime' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='amplitude'>
<retval declared_type='float' type='f'/>
</method>
<method selector='amplitudeRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithWaves:amplitude:grid:duration:'>
<arg name='wav' declared_type='int' type='i' index='0'/>
<arg name='amp' declared_type='float' type='f' index='1'/>
<arg name='gridSize' declared_type='ccGridSize' type64='{_ccGridSize=qq}' type='{_ccGridSize=ii}' index='2'/>
<arg name='d' declared_type='ccTime' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAmplitude:'>
<arg name='amplitude' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAmplitudeRate:'>
<arg name='amplitudeRate' declared_type='float' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCWindow'>
<method selector='initWithFrame:fullscreen:'>
<arg name='frame' declared_type='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
<arg name='fullscreen' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='ccFlagsChanged:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccKeyDown:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccKeyUp:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccMouseDown:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccMouseDragged:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccMouseEntered:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ccMouseExited:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ccMouseMoved:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccMouseUp:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccOtherMouseDown:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccOtherMouseDragged:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccOtherMouseUp:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccRightMouseDown:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccRightMouseDragged:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccRightMouseUp:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccScrollWheel:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccTouchesBeganWithEvent:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccTouchesCancelledWithEvent:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccTouchesEndedWithEvent:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccTouchesMovedWithEvent:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='color'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='doesOpacityModifyRGB'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='easeActionWithAction:'>
<arg name='action' declared_type='CCActionInterval*' type='@' index='0'/>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
<method selector='flagsChanged:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='keyDown:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='keyUp:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseDown:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseDragged:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseEntered:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseExited:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseMoved:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseUp:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='opacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='otherMouseDown:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='otherMouseDragged:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='otherMouseUp:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rightMouseDown:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rightMouseDragged:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rightMouseUp:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollWheel:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendFunc:'>
<arg name='blendFunc' declared_type='ccBlendFunc' type='{_ccBlendFunc=II}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCString:'>
<arg name='label' declared_type='char*' type='*' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg name='color' declared_type='ccColor3B' type='{_ccColor3B=CCC}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg name='opacity' declared_type='GLubyte' type='C' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacityModifyRGB:'>
<arg name='boolean' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setString:'>
<arg name='label' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:'>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='string'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='texture'>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
<method selector='touchesBeganWithEvent:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchesCancelledWithEvent:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchesEndedWithEvent:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchesMovedWithEvent:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateProjection'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSThread'>
<method selector='performBlock:'>
<arg name='block' function_pointer='true' declared_type='void (^)(void)' type='@?' index='0'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='performBlock:waitUntilDone:'>
<arg name='block' function_pointer='true' declared_type='void (^)(void)' type='@?' index='0'>
<retval declared_type='void' type='v'/>
</arg>
<arg name='wait' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='performBlock:withObject:waitUntilDone:'>
<arg name='block' function_pointer='true' declared_type='void (^)(id)' type='@?' index='0'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='object' declared_type='id' type='@' index='1'/>
<arg name='wait' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='CCBlendProtocol'>
<method type64='{_ccBlendFunc=II}16@0:8' type='{_ccBlendFunc=II}8@0:4' selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method type64='v24@0:8{_ccBlendFunc=II}16' type='v16@0:4{_ccBlendFunc=II}8' selector='setBlendFunc:'>
<arg name='blendFunc' declared_type='ccBlendFunc' type='{_ccBlendFunc=II}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='CCDirectorDelegate'>
<method type64='v16@0:8' type='v8@0:4' selector='updateProjection'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='CCEventDelegate'>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='flagsChanged:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='keyDown:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='keyUp:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='mouseDown:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='mouseDragged:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='mouseEntered:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='mouseExited:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='mouseMoved:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='mouseUp:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='otherMouseDown:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='otherMouseDragged:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='otherMouseUp:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='rightMouseDown:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='rightMouseDragged:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='rightMouseUp:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='scrollWheel:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='touchesBeganWithEvent:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='touchesCancelledWithEvent:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='touchesEndedWithEvent:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='touchesMovedWithEvent:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='CCKeyboardEventDelegate'>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='ccFlagsChanged:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='ccKeyDown:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='ccKeyUp:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='CCLabelProtocol'>
<method type64='v24@0:8*16' type='v12@0:4*8' selector='setCString:'>
<arg name='label' declared_type='char*' type='*' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='setString:'>
<arg name='label' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='@16@0:8' type='@8@0:4' selector='string'>
<retval declared_type='NSString*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='CCMouseEventDelegate'>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='ccMouseDown:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='ccMouseDragged:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='ccMouseEntered:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='ccMouseExited:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='ccMouseMoved:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='ccMouseUp:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='ccOtherMouseDown:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='ccOtherMouseDragged:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='ccOtherMouseUp:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='ccRightMouseDown:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='ccRightMouseDragged:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='ccRightMouseUp:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='ccScrollWheel:'>
<arg name='theEvent' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='CCRGBAProtocol'>
<method type64='{_ccColor3B=CCC}16@0:8' type='{_ccColor3B=CCC}8@0:4' selector='color'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method type64='B16@0:8' type='B8@0:4' selector='doesOpacityModifyRGB'>
<retval declared_type='BOOL' type='B'/>
</method>
<method type64='C16@0:8' type='C8@0:4' selector='opacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method type64='v19@0:8{_ccColor3B=CCC}16' type='v11@0:4{_ccColor3B=CCC}8' selector='setColor:'>
<arg name='color' declared_type='ccColor3B' type='{_ccColor3B=CCC}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v20@0:8C16' type='v12@0:4C8' selector='setOpacity:'>
<arg name='opacity' declared_type='GLubyte' type='C' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v20@0:8B16' type='v12@0:4B8' selector='setOpacityModifyRGB:'>
<arg name='boolean' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='CCTextureProtocol'>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='setTexture:'>
<arg name='texture' declared_type='CCTexture2D*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='@16@0:8' type='@8@0:4' selector='texture'>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='CCTouchEventDelegate'>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='ccTouchesBeganWithEvent:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='ccTouchesCancelledWithEvent:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='ccTouchesEndedWithEvent:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='ccTouchesMovedWithEvent:'>
<arg name='event' declared_type='NSEvent*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='CCTransitionEaseScene'>
<method type64='@24@0:8@16' type='@12@0:4@8' selector='easeActionWithAction:'>
<arg name='action' declared_type='CCActionInterval*' type='@' index='0'/>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
</informal_protocol>
</signatures>
